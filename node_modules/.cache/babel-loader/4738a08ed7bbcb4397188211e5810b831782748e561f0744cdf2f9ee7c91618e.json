{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\Sound Project\\\\src\\\\components\\\\insideModifier.js\";\nimport React from 'react';\n\n// export default function InsideModifier({title,list}) {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InsideModifier() {\n  //   const PresetList=['Random','Coin','Sound3','Sound4','Sound5','Sound6']\n  //   const FuncList=['unoise','sine','saw','traingle','square','synth','noise','string']\n\n  //   let soundButton;\n  //   if(title === 'Presets'){\n  //     soundButton = PresetList.map((preset,index)=>(\n  //       <button key={index} style={{width:81,margin:3}}>{preset}</button>\n  //     ));\n  //   }\n\n  //   let chunks = [];\n  //   for (let i = 0; i < FuncList.length; i += 2) {\n  //     chunks.push(FuncList.slice(i, i + 2));\n  //   }\n\n  //   let FuncItem = chunks.map((chunk, rowIndex) => (\n  //     <tr key={rowIndex} style={{fontSize:12}}>\n  //       {chunk.map((item, colIndex) => (\n  //         <td className='chuncks' key={colIndex}>\n  //             <input type='radio' style={{alignItems:'left'}} name='fngroup' value={item}/>\n  //             <label>{item}\n  //             </label>\n  //             </td>\n  //       ))}\n  //     </tr>\n  //   ));\n\n  //   let listitem = list.map((item,index)=>{\n  //     if(item===\"Func\"){\n  //       return(\n  //         <tr>\n  //         <td key={index}>{item}</td>\n  //         <td style={{textAlign:'right'}}>\n  //           <div class=\"radio-group\">\n  //           <form className='form'>\n  //             {FuncItem}\n  //           </form>\n  //           </div>\n  //           </td>\n  //         </tr>\n  //       );\n  //     }\n  //     else{\n  //       return(\n  //       <tr>\n  //         <td key={index}>{item}</td>\n  //         <td style={{textAlign:'right'}}><input type='range' min={0} max={1} step={0.01} style={{width:170}} name={item}></input></td>\n  //       </tr>\n  //       );\n  //     }\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insideModifier\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"presets\",\n      class: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"panel-title\",\n        children: \"Presets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"panels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = InsideModifier;\nvar _c;\n$RefreshReg$(_c, \"InsideModifier\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InsideModifier","className","children","id","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Course/Sound Project/src/components/insideModifier.js"],"sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\n// export default function InsideModifier({title,list}) {\r\nexport default function InsideModifier()\r\n{\r\n\r\n//   const PresetList=['Random','Coin','Sound3','Sound4','Sound5','Sound6']\r\n//   const FuncList=['unoise','sine','saw','traingle','square','synth','noise','string']\r\n  \r\n//   let soundButton;\r\n//   if(title === 'Presets'){\r\n//     soundButton = PresetList.map((preset,index)=>(\r\n//       <button key={index} style={{width:81,margin:3}}>{preset}</button>\r\n//     ));\r\n//   }\r\n\r\n//   let chunks = [];\r\n//   for (let i = 0; i < FuncList.length; i += 2) {\r\n//     chunks.push(FuncList.slice(i, i + 2));\r\n//   }\r\n\r\n//   let FuncItem = chunks.map((chunk, rowIndex) => (\r\n//     <tr key={rowIndex} style={{fontSize:12}}>\r\n//       {chunk.map((item, colIndex) => (\r\n//         <td className='chuncks' key={colIndex}>\r\n//             <input type='radio' style={{alignItems:'left'}} name='fngroup' value={item}/>\r\n//             <label>{item}\r\n//             </label>\r\n//             </td>\r\n//       ))}\r\n//     </tr>\r\n//   ));\r\n\r\n\r\n//   let listitem = list.map((item,index)=>{\r\n//     if(item===\"Func\"){\r\n//       return(\r\n//         <tr>\r\n//         <td key={index}>{item}</td>\r\n//         <td style={{textAlign:'right'}}>\r\n//           <div class=\"radio-group\">\r\n//           <form className='form'>\r\n//             {FuncItem}\r\n//           </form>\r\n//           </div>\r\n//           </td>\r\n//         </tr>\r\n//       );\r\n//     }\r\n//     else{\r\n//       return(\r\n//       <tr>\r\n//         <td key={index}>{item}</td>\r\n//         <td style={{textAlign:'right'}}><input type='range' min={0} max={1} step={0.01} style={{width:170}} name={item}></input></td>\r\n//       </tr>\r\n//       );\r\n//     }\r\n// })\r\n\r\n  return (\r\n    <div className='insideModifier'>\r\n      {/* <div style={{paddingLeft:6,paddingRight:6}}><b>{title}</b></div>\r\n      <div>\r\n        <table id='tablewidth'>\r\n          {listitem}\r\n        </table>\r\n      </div>\r\n      <div className='rangeInput'>\r\n        {soundButton}\r\n      </div> */}\r\n      <div id=\"presets\" class=\"panel\">\r\n\t\t\t  <div class=\"panel-title\">Presets</div>\r\n      </div>\r\n      <div class=\"clear\"></div>\r\n      <div id=\"panels\"></div>\r\n      <div class=\"clear\"></div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAIzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,cAAcA,CAAA,EACtC;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACED,OAAA;IAAKE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAU7BH,OAAA;MAAKI,EAAE,EAAC,SAAS;MAACC,KAAK,EAAC,OAAO;MAAAF,QAAA,eAChCH,OAAA;QAAKK,KAAK,EAAC,aAAa;QAAAF,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNT,OAAA;MAAKK,KAAK,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzBT,OAAA;MAAKI,EAAE,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBT,OAAA;MAAKK,KAAK,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACC,EAAA,GA3EuBT,cAAc;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}