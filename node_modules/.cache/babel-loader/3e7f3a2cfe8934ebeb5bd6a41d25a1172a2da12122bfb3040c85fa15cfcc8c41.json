{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\Sound Project\\\\src\\\\components\\\\insideModifier.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../src/scripts/jsfx';\nimport jsfx from '../../src/scripts/jsfx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InsideModifier({\n  title,\n  list\n}) {\n  _s();\n  const FuncList = ['unoise', 'sine', 'saw', 'traingle', 'square', 'synth', 'noise', 'string'];\n  let chunks = [];\n  for (let i = 0; i < FuncList.length; i += 2) {\n    chunks.push(FuncList.slice(i, i + 2));\n  }\n  let FuncItem = chunks.map((chunk, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      fontSize: 12\n    },\n    children: chunk.map((item, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"chuncks\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        style: {\n          alignItems: 'left'\n        },\n        name: \"fngroup\",\n        value: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, colIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n  // const getParamValues = (paramName, type) => {\n  //   return jsfx.Module[paramName]?.\n  // };\n  // const getRangeValue = (paramName) => {\n  //   const paramValues = getParamValues(paramName);\n  //   if (!paramValues) return null;\n\n  //   return {\n  //     min: paramValues.Min.L,\n  //     max: paramValues.Max.H,\n  //     defaultValue: paramValues.Start.D,\n  //   };\n  // };\n\n  const [value, setValue] = useState();\n  useEffect(() => {\n    // Fetch initial value based on title and item\n    list.forEach(item => {\n      // Fetch initial value based on title and item\n      if (jsfx.Module[title][\"params\"][item]) {\n        const initialValue = jsfx.Module[title][\"params\"][item].D;\n        setValue(initialValue);\n      }\n    });\n  }, [title, list]);\n  let listitem = list.map((item, index) => {\n    if (item === \"Func\") {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"radio-group\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              children: FuncItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (jsfx.Module[title][\"params\"][item]) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: title + \"$\" + item,\n              min: jsfx.Module[title][\"params\"][item].L,\n              max: jsfx.Module[title][\"params\"][item].H,\n              step: jsfx.Module[title][\"params\"][item].H - jsfx.Module[title][\"params\"][item].L > 10 ? 1 : 0.01,\n              style: {\n                width: 170\n              },\n              name: item,\n              value: value,\n              onChange: ev => {\n                window.ModifyValue({\n                  title: title\n                }, {\n                  item: item\n                }, setValue(parseFloat(ev.target.value)));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      }\n      // else{\n      //   return(\n      //     <tr>\n      //       <td key={index}>{item}</td>\n      //       <td style={{textAlign:'right'}}>\n      //         <input \n      //           type='range' \n      //           min={0} \n      //           max={1} \n      //           step={0.01} \n      //           style={{width:170}} \n      //           name={item}\n      //           defaultValue={0}>\n      //         </input>\n      //         </td>\n      //     </tr>\n      //     );\n      // }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insideModifier\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: 6,\n        paddingRight: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"tablewidth\",\n        children: listitem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(InsideModifier, \"XqQdYKWvZ+Okd02aidqWkV2iB8E=\");\n_c = InsideModifier;\nvar _c;\n$RefreshReg$(_c, \"InsideModifier\");","map":{"version":3,"names":["React","useState","useEffect","jsfx","jsxDEV","_jsxDEV","InsideModifier","title","list","_s","FuncList","chunks","i","length","push","slice","FuncItem","map","chunk","rowIndex","style","fontSize","children","item","colIndex","className","type","alignItems","name","value","fileName","_jsxFileName","lineNumber","columnNumber","setValue","forEach","Module","initialValue","D","listitem","index","textAlign","class","id","min","L","max","H","step","width","onChange","ev","window","ModifyValue","parseFloat","target","paddingLeft","paddingRight","_c","$RefreshReg$"],"sources":["D:/React Course/Sound Project/src/components/insideModifier.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport '../../src/scripts/jsfx'\r\nimport jsfx from '../../src/scripts/jsfx'\r\n\r\n\r\nexport default function InsideModifier({title,list}) {\r\n\r\n  const FuncList=['unoise','sine','saw','traingle','square','synth','noise','string']\r\n\r\n  let chunks = [];\r\n  for (let i = 0; i < FuncList.length; i += 2) {\r\n    chunks.push(FuncList.slice(i, i + 2));\r\n  }\r\n\r\n  let FuncItem = chunks.map((chunk, rowIndex) => (\r\n    <tr key={rowIndex} style={{fontSize:12}}>\r\n      {chunk.map((item, colIndex) => (\r\n        <td className='chuncks' key={colIndex}>\r\n            <input type='radio' style={{alignItems:'left'}} name='fngroup' value={item}/>\r\n            <label>{item}\r\n            </label>\r\n            </td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  // const getParamValues = (paramName, type) => {\r\n  //   return jsfx.Module[paramName]?.\r\n  // };\r\n  // const getRangeValue = (paramName) => {\r\n  //   const paramValues = getParamValues(paramName);\r\n  //   if (!paramValues) return null;\r\n    \r\n  //   return {\r\n  //     min: paramValues.Min.L,\r\n  //     max: paramValues.Max.H,\r\n  //     defaultValue: paramValues.Start.D,\r\n  //   };\r\n  // };\r\n\r\n  const [value, setValue] = useState();\r\n\r\n  useEffect(() => {\r\n    // Fetch initial value based on title and item\r\n    list.forEach(item => {\r\n      // Fetch initial value based on title and item\r\n      if(jsfx.Module[title][\"params\"][item]){\r\n        const initialValue = jsfx.Module[title][\"params\"][item].D;\r\n        setValue(initialValue);\r\n      }\r\n    });\r\n  }, [title, list]);\r\n\r\n  let listitem = list.map((item,index)=>{\r\n    if(item===\"Func\"){\r\n      return(\r\n        <tr>\r\n        <td key={index}>{item}</td>\r\n        <td style={{textAlign:'right'}}>\r\n          <div class=\"radio-group\">\r\n          <form className='form'>\r\n            {FuncItem}\r\n          </form>\r\n          </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    else{\r\n      if(jsfx.Module[title][\"params\"][item]){\r\n        return(\r\n          <tr>\r\n            <td key={index}>{item}</td>\r\n            <td style={{textAlign:'right'}}>\r\n              <input \r\n                type='range'\r\n                id = {title+\"$\"+item}  \r\n                min={jsfx.Module[title][\"params\"][item].L} \r\n                max={jsfx.Module[title][\"params\"][item].H} \r\n                step={(jsfx.Module[title][\"params\"][item].H - jsfx.Module[title][\"params\"][item].L) > 10 ? 1 : 0.01} \r\n                style={{width:170}} \r\n                name={item}\r\n                value={value}\r\n                onChange={(ev)=>{\r\n                  window.ModifyValue({title: title}, {item: item}, setValue(parseFloat(ev.target.value)));\r\n                }}\r\n                >\r\n              </input>\r\n              </td>\r\n          </tr>\r\n          );\r\n      }\r\n      // else{\r\n      //   return(\r\n      //     <tr>\r\n      //       <td key={index}>{item}</td>\r\n      //       <td style={{textAlign:'right'}}>\r\n      //         <input \r\n      //           type='range' \r\n      //           min={0} \r\n      //           max={1} \r\n      //           step={0.01} \r\n      //           style={{width:170}} \r\n      //           name={item}\r\n      //           defaultValue={0}>\r\n      //         </input>\r\n      //         </td>\r\n      //     </tr>\r\n      //     );\r\n      // }\r\n    }\r\n})\r\n\r\n  return (\r\n    <div className='insideModifier'>\r\n      <div style={{paddingLeft:6,paddingRight:6}}><b>{title}</b></div>\r\n      <div>\r\n        <table id='tablewidth'>\r\n          {listitem}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}