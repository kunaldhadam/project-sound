{"ast":null,"code":"(function (root, factory) {\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = factory();\n  } else {\n    root.jsfx = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  var chr = String.fromCharCode;\n  var TAU = +Math.PI * 2;\n  var bitsPerSample = 16 | 0;\n  var numChannels = 1 | 0;\n  var sin = Math.sin;\n  var pow = Math.pow;\n  var abs = Math.abs;\n  var EPSILON = 0.000001;\n  var jsfx = {};\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\n  jsfx.SampleRate = 0 | 0;\n  jsfx.Sec = 0 | 0;\n  jsfx.SetSampleRate = function (sampleRate) {\n    jsfx.SampleRate = sampleRate | 0;\n    jsfx.Sec = sampleRate | 0;\n  };\n  jsfx.SetSampleRate(getDefaultSampleRate());\n\n  // MAIN API\n\n  // Creates a new Audio object based on the params\n  // params can be a params generating function or the actual parameters\n  jsfx.Sound = function (params) {\n    var processor = new Processor(params, jsfx.DefaultModules);\n    var block = createFloatArray(processor.getSamplesLeft());\n    processor.generate(block);\n    return CreateAudio(block);\n  };\n\n  // Same as Sounds, but avoids locking the browser for too long\n  // in case you have a large amount of sounds to generate\n  jsfx.Sounds = function (library, ondone, onprogress) {\n    var audio = {};\n    var player = {};\n    player._audio = audio;\n    var toLoad = [];\n\n    // create playing functions\n    map_object(library, function (_, name) {\n      player[name] = function () {\n        if (typeof audio[name] !== \"undefined\") {\n          audio[name].currentTime = 0.0;\n          audio[name].play();\n        }\n      };\n      toLoad.push(name);\n    });\n    var loaded = 0,\n      total = toLoad.length;\n\n    // function next() {\n    // \tif (toLoad.length == 0) {\n    // \t\tondone && ondone(sounds);\n    // \t\treturn;\n    // \t}\n    // \tvar name = toLoad.shift();\n    // \taudio[name] = jsfx.Sound(library[name]);\n    // \tloaded++;\n    // \tonprogress && onprogress(name, loaded, total);\n\n    // \twindow.setTimeout(next, 30);\n    // }\n    // next();\n\n    return player;\n  };\n\n  // SoundsImmediate takes a named set of params, and generates multiple\n  // sound objects at once.\n  jsfx.SoundsImmediate = function (library) {\n    var audio = {};\n    var player = {};\n    player._audio = audio;\n    map_object(library, function (params, name) {\n      audio[name] = jsfx.Sound(params);\n      player[name] = function () {\n        if (typeof audio[name] !== \"undefined\") {\n          audio[name].currentTime = 0.0;\n          audio[name].play();\n        }\n      };\n    });\n    return player;\n  };\n\n  // FloatBuffer creates a FloatArray filled with audio\n  jsfx.FloatBuffer = function (params, modules) {\n    var processor = new Processor(params, jsfx.DefaultModules);\n    var block = createFloatArray(processor.getSamplesLeft());\n    processor.generate(block);\n    return block;\n  };\n  if (typeof AudioContext !== \"undefined\") {\n    // Node creates a new AudioContext ScriptProcessor that outputs the\n    // sound. It will automatically disconnect, unless otherwise specified.\n    jsfx.Node = function (audioContext, params, modules, bufferSize, stayConnected) {\n      var node = audioContext.createScriptProcessor(bufferSize, 0, 1);\n      var gen = new Processor(params, modules || jsfx.DefaultModules);\n      node.onaudioprocess = function (ev) {\n        var block = ev.outputBuffer.getChannelData(0);\n        gen.generate(block);\n        if (!stayConnected && gen.finished) {\n          // we need to do an async disconnect, otherwise Chrome may\n          // glitch\n          setTimeout(function () {\n            node.disconnect();\n          }, 30);\n        }\n      };\n      return node;\n    };\n\n    // AudioBuffer creates a buffer filled with the proper audio\n    // This is useful, when you want to use AudioContext.BufferSource\n    jsfx.AudioBuffer = function (audioContext, params, modules) {\n      var processor = new Processor(params, modules || jsfx.DefaultModules);\n      var buffer = audioContext.createBuffer(numChannels, processor.getSamplesLeft(), jsfx.SampleRate);\n      var block = buffer.getChannelData(0);\n      processor.generate(block);\n      return buffer;\n    };\n\n    // Live creates an managed AudioContext for playing.\n    // This is useful, when you want to use procedurally generated sounds.\n    jsfx.Live = function (library, modules, BufferSize) {\n      //TODO: add limit for number of notes played at the same time\n      BufferSize = BufferSize || 2048;\n      var player = {};\n      var context = new AudioContext();\n      var volume = context.createGain();\n      volume.connect(context.destination);\n      player._context = context;\n      player._volume = volume;\n      map_object(library, function (params, name) {\n        player[name] = function () {\n          var node = jsfx.Node(context, params, modules, BufferSize);\n          node.connect(volume);\n        };\n      });\n      player._close = function () {\n        context.close();\n      };\n      player._play = function (params) {\n        var node = jsfx.Node(context, params, modules, BufferSize);\n        node.connect(volume);\n      };\n      return player;\n    };\n  } else {\n    jsfx.Live = jsfx.Sounds;\n  }\n\n  // SOUND GENERATION\n  jsfx.Module = {};\n\n  // generators\n  jsfx.G = {};\n  var stage = jsfx.stage = {\n    PhaseSpeed: 0,\n    PhaseSpeedMod: 10,\n    Generator: 20,\n    SampleMod: 30,\n    Volume: 40\n  };\n  function byStage(a, b) {\n    return a.stage - b.stage;\n  }\n  jsfx.InitDefaultParams = InitDefaultParams;\n  function InitDefaultParams(params, modules) {\n    // setup modules\n    for (var i = 0; i < modules.length; i += 1) {\n      var M = modules[i];\n      var P = params[M.name] || {};\n\n      // add missing parameters\n      map_object(M.params, function (def, name) {\n        if (typeof P[name] === 'undefined') {\n          P[name] = def.D;\n        }\n      });\n      params[M.name] = P;\n    }\n  }\n\n  // Generates a stateful sound effect processor\n  // params can be a function that creates a parameter set\n  jsfx.Processor = Processor;\n  function Processor(params, modules) {\n    params = params || {};\n    modules = modules || jsfx.DefaultModules;\n    if (typeof params === 'function') {\n      params = params();\n    } else {\n      params = JSON.parse(JSON.stringify(params));\n    }\n    this.finished = false;\n    this.state = {\n      SampleRate: params.SampleRate || jsfx.SampleRate\n    };\n\n    // sort modules\n    modules = modules.slice();\n    modules.sort(byStage);\n    this.modules = modules;\n\n    // init missing params\n    InitDefaultParams(params, modules);\n\n    // setup modules\n    for (var i = 0; i < this.modules.length; i += 1) {\n      var M = this.modules[i];\n      this.modules[i].setup(this.state, params[M.name]);\n    }\n  }\n  Processor.prototype = {\n    //TODO: see whether this can be converted to a module\n    generate: function (block) {\n      for (var i = 0 | 0; i < block.length; i += 1) {\n        block[i] = 0;\n      }\n      if (this.finished) {\n        return;\n      }\n      var $ = this.state,\n        N = block.length | 0;\n      for (var i = 0; i < this.modules.length; i += 1) {\n        var M = this.modules[i];\n        var n = M.process($, block.subarray(0, N)) | 0;\n        N = Math.min(N, n);\n      }\n      if (N < block.length) {\n        this.finished = true;\n      }\n      for (var i = N; i < block.length; i++) {\n        block[i] = 0;\n      }\n    },\n    getSamplesLeft: function () {\n      var samples = 0;\n      for (var i = 0; i < this.state.envelopes.length; i += 1) {\n        samples += this.state.envelopes[i].N;\n      }\n      if (samples === 0) {\n        samples = 3 * this.state.SampleRate;\n      }\n      return samples;\n    }\n  };\n\n  // Frequency\n  jsfx.Module.Frequency = {\n    name: 'Frequency',\n    params: {\n      /* beautify preserve:start */\n      Start: {\n        L: 30,\n        H: 1800,\n        D: 440\n      },\n      Min: {\n        L: 30,\n        H: 1800,\n        D: 30\n      },\n      Max: {\n        L: 30,\n        H: 1800,\n        D: 1800\n      },\n      Slide: {\n        L: -1,\n        H: 1,\n        D: 0\n      },\n      DeltaSlide: {\n        L: -1,\n        H: 1,\n        D: 0\n      },\n      RepeatSpeed: {\n        L: 0,\n        H: 3.0,\n        D: 0\n      },\n      ChangeAmount: {\n        L: -12,\n        H: 12,\n        D: 0\n      },\n      ChangeSpeed: {\n        L: 0,\n        H: 1,\n        D: 0\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.PhaseSpeed,\n    setup: function ($, P) {\n      var SR = $.SampleRate;\n      $.phaseParams = P;\n      $.phaseSpeed = P.Start * TAU / SR;\n      $.phaseSpeedMax = P.Max * TAU / SR;\n      $.phaseSpeedMin = P.Min * TAU / SR;\n      $.phaseSpeedMin = Math.min($.phaseSpeedMin, $.phaseSpeed);\n      $.phaseSpeedMax = Math.max($.phaseSpeedMax, $.phaseSpeed);\n      $.phaseSlide = 1.0 + pow(P.Slide, 3.0) * 64.0 / SR;\n      $.phaseDeltaSlide = pow(P.DeltaSlide, 3.0) / (SR * 1000);\n      $.repeatTime = 0;\n      $.repeatLimit = Infinity;\n      if (P.RepeatSpeed > 0) {\n        $.repeatLimit = P.RepeatSpeed * SR;\n      }\n      $.arpeggiatorTime = 0;\n      $.arpeggiatorLimit = P.ChangeSpeed * SR;\n      if (P.ChangeAmount == 0) {\n        $.arpeggiatorLimit = Infinity;\n      }\n      $.arpeggiatorMod = 1 + P.ChangeAmount / 12.0;\n    },\n    process: function ($, block) {\n      var speed = +$.phaseSpeed,\n        min = +$.phaseSpeedMin,\n        max = +$.phaseSpeedMax,\n        slide = +$.phaseSlide,\n        deltaSlide = +$.phaseDeltaSlide;\n      var repeatTime = $.repeatTime,\n        repeatLimit = $.repeatLimit;\n      var arpTime = $.arpeggiatorTime,\n        arpLimit = $.arpeggiatorLimit,\n        arpMod = $.arpeggiatorMod;\n      for (var i = 0; i < block.length; i++) {\n        slide += deltaSlide;\n        speed *= slide;\n        speed = speed < min ? min : speed > max ? max : speed;\n        if (repeatTime > repeatLimit) {\n          this.setup($, $.phaseParams);\n          return i + this.process($, block.subarray(i)) - 1;\n        }\n        repeatTime++;\n        if (arpTime > arpLimit) {\n          speed *= arpMod;\n          arpTime = 0;\n          arpLimit = Infinity;\n        }\n        arpTime++;\n        block[i] += speed;\n      }\n      $.repeatTime = repeatTime;\n      $.arpeggiatorTime = arpTime;\n      $.arpeggiatorLimit = arpLimit;\n      $.phaseSpeed = speed;\n      $.phaseSlide = slide;\n      return block.length;\n    }\n  };\n\n  // Vibrato\n  jsfx.Module.Vibrato = {\n    name: 'Vibrato',\n    params: {\n      /* beautify preserve:start */\n      Depth: {\n        L: 0,\n        H: 1,\n        D: 0\n      },\n      DepthSlide: {\n        L: -1,\n        H: 1,\n        D: 0\n      },\n      Frequency: {\n        L: 0.01,\n        H: 48,\n        D: 30\n      },\n      FrequencySlide: {\n        L: -1.00,\n        H: 1,\n        D: 0\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.PhaseSpeedMod,\n    setup: function ($, P) {\n      var SR = $.SampleRate;\n      $.vibratoPhase = 0;\n      $.vibratoDepth = P.Depth;\n      $.vibratoPhaseSpeed = P.Frequency * TAU / SR;\n      $.vibratoPhaseSpeedSlide = 1.0 + pow(P.FrequencySlide, 3.0) * 3.0 / SR;\n      $.vibratoDepthSlide = P.DepthSlide / SR;\n    },\n    process: function ($, block) {\n      var phase = +$.vibratoPhase,\n        depth = +$.vibratoDepth,\n        speed = +$.vibratoPhaseSpeed,\n        slide = +$.vibratoPhaseSpeedSlide,\n        depthSlide = +$.vibratoDepthSlide;\n      if (depth == 0 && depthSlide <= 0) {\n        return block.length;\n      }\n      for (var i = 0; i < block.length; i++) {\n        phase += speed;\n        if (phase > TAU) {\n          phase -= TAU;\n        }\n        ;\n        block[i] += block[i] * sin(phase) * depth;\n        speed *= slide;\n        depth += depthSlide;\n        depth = clamp1(depth);\n      }\n      $.vibratoPhase = phase;\n      $.vibratoDepth = depth;\n      $.vibratoPhaseSpeed = speed;\n      return block.length;\n    }\n  };\n\n  // Generator\n  jsfx.Module.Generator = {\n    name: 'Generator',\n    params: {\n      /* beautify preserve:start */\n      // C = choose\n      Func: {\n        C: jsfx.G,\n        D: 'square'\n      },\n      A: {\n        L: 0,\n        H: 1,\n        D: 0\n      },\n      B: {\n        L: 0,\n        H: 1,\n        D: 0\n      },\n      ASlide: {\n        L: -1,\n        H: 1,\n        D: 0\n      },\n      BSlide: {\n        L: -1,\n        H: 1,\n        D: 0\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.Generator,\n    setup: function ($, P) {\n      $.generatorPhase = 0;\n      if (typeof P.Func === 'string') {\n        $.generator = jsfx.G[P.Func];\n      } else {\n        $.generator = P.Func;\n      }\n      if (typeof $.generator === 'object') {\n        $.generator = $.generator.create();\n      }\n      assert(typeof $.generator === 'function', 'generator must be a function');\n      $.generatorA = P.A;\n      $.generatorASlide = P.ASlide;\n      $.generatorB = P.B;\n      $.generatorBSlide = P.BSlide;\n    },\n    process: function ($, block) {\n      return $.generator($, block);\n    }\n  };\n\n  // Karplus Strong algorithm for string sound\n  var GuitarBufferSize = 1 << 16;\n  jsfx.Module.Guitar = {\n    name: 'Guitar',\n    params: {\n      /* beautify preserve:start */\n      A: {\n        L: 0.0,\n        H: 1.0,\n        D: 1\n      },\n      B: {\n        L: 0.0,\n        H: 1.0,\n        D: 1\n      },\n      C: {\n        L: 0.0,\n        H: 1.0,\n        D: 1\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.Generator,\n    setup: function ($, P) {\n      $.guitarA = P.A;\n      $.guitarB = P.B;\n      $.guitarC = P.C;\n      $.guitarBuffer = createFloatArray(GuitarBufferSize);\n      $.guitarHead = 0;\n      var B = $.guitarBuffer;\n      for (var i = 0; i < B.length; i++) {\n        B[i] = Math.random() * 2 - 1;\n      }\n    },\n    process: function ($, block) {\n      var BS = GuitarBufferSize,\n        BM = BS - 1;\n      var A = +$.guitarA,\n        B = +$.guitarB,\n        C = +$.guitarC;\n      var T = A + B + C;\n      var h = $.guitarHead;\n      var buffer = $.guitarBuffer;\n      for (var i = 0; i < block.length; i++) {\n        // buffer size\n        var n = TAU / block[i] | 0;\n        n = n > BS ? BS : n;\n\n        // tail\n        var t = h - n + BS & BM;\n        buffer[h] = (buffer[t - 0 + BS & BM] * A + buffer[t - 1 + BS & BM] * B + buffer[t - 2 + BS & BM] * C) / T;\n        block[i] = buffer[h];\n        h = h + 1 & BM;\n      }\n      $.guitarHead = h;\n      return block.length;\n    }\n  };\n\n  // Low/High-Pass Filter\n  jsfx.Module.Filter = {\n    name: 'Filter',\n    params: {\n      /* beautify preserve:start */\n      LP: {\n        L: 0,\n        H: 1,\n        D: 1\n      },\n      LPSlide: {\n        L: -1,\n        H: 1,\n        D: 0\n      },\n      LPResonance: {\n        L: 0,\n        H: 1,\n        D: 0\n      },\n      HP: {\n        L: 0,\n        H: 1,\n        D: 0\n      },\n      HPSlide: {\n        L: -1,\n        H: 1,\n        D: 0\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.SampleMod + 0,\n    setup: function ($, P) {\n      $.FilterEnabled = P.HP > EPSILON || P.LP < 1 - EPSILON;\n      $.LPEnabled = P.LP < 1 - EPSILON;\n      $.LP = pow(P.LP, 3.0) / 10;\n      $.LPSlide = 1.0 + P.LPSlide * 100 / $.SampleRate;\n      $.LPPos = 0;\n      $.LPPosSlide = 0;\n      $.LPDamping = 5.0 / (1.0 + pow(P.LPResonance, 2) * 20) * (0.01 + P.LP);\n      $.LPDamping = 1.0 - Math.min($.LPDamping, 0.8);\n      $.HP = pow(P.HP, 2.0) / 10;\n      $.HPPos = 0;\n      $.HPSlide = 1.0 + P.HPSlide * 100 / $.SampleRate;\n    },\n    enabled: function ($) {\n      return $.FilterEnabled;\n    },\n    process: function ($, block) {\n      if (!this.enabled($)) {\n        return block.length;\n      }\n      var lp = +$.LP;\n      var lpPos = +$.LPPos;\n      var lpPosSlide = +$.LPPosSlide;\n      var lpSlide = +$.LPSlide;\n      var lpDamping = +$.LPDamping;\n      var lpEnabled = +$.LPEnabled;\n      var hp = +$.HP;\n      var hpPos = +$.HPPos;\n      var hpSlide = +$.HPSlide;\n      for (var i = 0; i < block.length; i++) {\n        if (hp > EPSILON || hp < -EPSILON) {\n          hp *= hpSlide;\n          hp = hp < EPSILON ? EPSILON : hp > 0.1 ? 0.1 : hp;\n        }\n        var lpPos_ = lpPos;\n        lp *= lpSlide;\n        lp = lp < 0 ? lp = 0 : lp > 0.1 ? 0.1 : lp;\n        var sample = block[i];\n        if (lpEnabled) {\n          lpPosSlide += (sample - lpPos) * lp;\n          lpPosSlide *= lpDamping;\n        } else {\n          lpPos = sample;\n          lpPosSlide = 0;\n        }\n        lpPos += lpPosSlide;\n        hpPos += lpPos - lpPos_;\n        hpPos *= 1.0 - hp;\n        block[i] = hpPos;\n      }\n      $.LPPos = lpPos;\n      $.LPPosSlide = lpPosSlide;\n      $.LP = lp;\n      $.HP = hp;\n      $.HPPos = hpPos;\n      return block.length;\n    }\n  };\n\n  // Phaser Effect\n  var PhaserBufferSize = 1 << 10;\n  jsfx.Module.Phaser = {\n    name: 'Phaser',\n    params: {\n      /* beautify preserve:start */\n      Offset: {\n        L: -1,\n        H: 1,\n        D: 0\n      },\n      Sweep: {\n        L: -1,\n        H: 1,\n        D: 0\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.SampleMod + 1,\n    setup: function ($, P) {\n      $.phaserBuffer = createFloatArray(PhaserBufferSize);\n      $.phaserPos = 0;\n      $.phaserOffset = pow(P.Offset, 2.0) * (PhaserBufferSize - 4);\n      $.phaserOffsetSlide = pow(P.Sweep, 3.0) * 4000 / $.SampleRate;\n    },\n    enabled: function ($) {\n      return abs($.phaserOffsetSlide) > EPSILON || abs($.phaserOffset) > EPSILON;\n    },\n    process: function ($, block) {\n      if (!this.enabled($)) {\n        return block.length;\n      }\n      var BS = PhaserBufferSize,\n        BM = BS - 1;\n      var buffer = $.phaserBuffer,\n        pos = $.phaserPos | 0,\n        offset = +$.phaserOffset,\n        offsetSlide = +$.phaserOffsetSlide;\n      for (var i = 0; i < block.length; i++) {\n        offset += offsetSlide;\n        //TODO: check whether this is correct\n        if (offset < 0) {\n          offset = -offset;\n          offsetSlide = -offsetSlide;\n        }\n        if (offset > BM) {\n          offset = BM;\n          offsetSlide = 0;\n        }\n        buffer[pos] = block[i];\n        var p = pos - (offset | 0) + BS & BM;\n        block[i] += buffer[p];\n        pos = pos + 1 & BM | 0;\n      }\n      $.phaserPos = pos;\n      $.phaserOffset = offset;\n      return block.length;\n    }\n  };\n\n  // Volume dynamic control with Attack-Sustain-Decay\n  //   ATTACK  | 0              - Volume + Punch\n  //   SUSTAIN | Volume + Punch - Volume\n  //   DECAY   | Volume         - 0\n  jsfx.Module.Volume = {\n    name: 'Volume',\n    params: {\n      /* beautify preserve:start */\n      Master: {\n        L: 0,\n        H: 1,\n        D: 0.5\n      },\n      Attack: {\n        L: 0.001,\n        H: 1,\n        D: 0.01\n      },\n      Sustain: {\n        L: 0,\n        H: 2,\n        D: 0.3\n      },\n      Punch: {\n        L: 0,\n        H: 3,\n        D: 1.0\n      },\n      Decay: {\n        L: 0.001,\n        H: 2,\n        D: 1.0\n      }\n      /* beautify preserve:end */\n    },\n    stage: stage.Volume,\n    setup: function ($, P) {\n      var SR = $.SampleRate;\n      var V = P.Master;\n      var VP = V * (1 + P.Punch);\n      $.envelopes = [\n      // S = start volume, E = end volume, N = duration in samples\n      {\n        S: 0,\n        E: V,\n        N: P.Attack * SR | 0\n      },\n      // Attack\n      {\n        S: VP,\n        E: V,\n        N: P.Sustain * SR | 0\n      },\n      // Sustain\n      {\n        S: V,\n        E: 0,\n        N: P.Decay * SR | 0\n      } // Decay\n      ];\n      // G = volume gradient\n      for (var i = 0; i < $.envelopes.length; i += 1) {\n        var e = $.envelopes[i];\n        e.G = (e.E - e.S) / e.N;\n      }\n    },\n    process: function ($, block) {\n      var i = 0;\n      while ($.envelopes.length > 0 && i < block.length) {\n        var E = $.envelopes[0];\n        var vol = E.S,\n          grad = E.G;\n        var N = Math.min(block.length - i, E.N) | 0;\n        var end = i + N | 0;\n        for (; i < end; i += 1) {\n          block[i] *= vol;\n          vol += grad;\n          vol = clamp(vol, 0, 10);\n        }\n        E.S = vol;\n        E.N -= N;\n        if (E.N <= 0) {\n          $.envelopes.shift();\n        }\n      }\n      return i;\n    }\n  };\n\n  // PRESETS\n\n  jsfx.DefaultModules = [jsfx.Module.Frequency, jsfx.Module.Vibrato, jsfx.Module.Generator, jsfx.Module.Filter, jsfx.Module.Phaser, jsfx.Module.Volume];\n  jsfx.DefaultModules.sort(byStage);\n  jsfx.EmptyParams = EmptyParams;\n  function EmptyParams() {\n    return map_object(jsfx.Module, function () {\n      return {};\n    });\n  }\n  jsfx._RemoveEmptyParams = RemoveEmptyParams;\n  function RemoveEmptyParams(params) {\n    for (var name in params) {\n      if (Object_keys(params[name]).length == 0) {\n        delete params[name];\n      }\n    }\n  }\n  ;\n  jsfx.Preset = {\n    Reset: function () {\n      return EmptyParams();\n    },\n    Coin: function () {\n      var p = EmptyParams();\n      p.Frequency.Start = runif(880, 660);\n      p.Volume.Sustain = runif(0.1);\n      p.Volume.Decay = runif(0.4, 0.1);\n      p.Volume.Punch = runif(0.3, 0.3);\n      if (runif() < 0.5) {\n        p.Frequency.ChangeSpeed = runif(0.15, 0.1);\n        p.Frequency.ChangeAmount = runif(8, 4);\n      }\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Laser: function () {\n      var p = EmptyParams();\n      p.Generator.Func = rchoose(['square', 'saw', 'sine']);\n      if (runif() < 0.33) {\n        p.Frequency.Start = runif(880, 440);\n        p.Frequency.Min = runif(0.1);\n        p.Frequency.Slide = runif(0.3, -0.8);\n      } else {\n        p.Frequency.Start = runif(1200, 440);\n        p.Frequency.Min = p.Frequency.Start - runif(880, 440);\n        if (p.Frequency.Min < 110) {\n          p.Frequency.Min = 110;\n        }\n        p.Frequency.Slide = runif(0.3, -1);\n      }\n      if (runif() < 0.5) {\n        p.Generator.A = runif(0.5);\n        p.Generator.ASlide = runif(0.2);\n      } else {\n        p.Generator.A = runif(0.5, 0.4);\n        p.Generator.ASlide = runif(0.7);\n      }\n      p.Volume.Sustain = runif(0.2, 0.1);\n      p.Volume.Decay = runif(0.4);\n      if (runif() < 0.5) {\n        p.Volume.Punch = runif(0.3);\n      }\n      if (runif() < 0.33) {\n        p.Phaser.Offset = runif(0.2);\n        p.Phaser.Sweep = runif(0.2);\n      }\n      if (runif() < 0.5) {\n        p.Filter.HP = runif(0.3);\n      }\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Explosion: function () {\n      var p = EmptyParams();\n      p.Generator.Func = 'noise';\n      if (runif() < 0.5) {\n        p.Frequency.Start = runif(440, 40);\n        p.Frequency.Slide = runif(0.4, -0.1);\n      } else {\n        p.Frequency.Start = runif(1600, 220);\n        p.Frequency.Slide = runif(-0.2, -0.2);\n      }\n      if (runif() < 0.2) {\n        p.Frequency.Slide = 0;\n      }\n      if (runif() < 0.3) {\n        p.Frequency.RepeatSpeed = runif(0.5, 0.3);\n      }\n      p.Volume.Sustain = runif(0.3, 0.1);\n      p.Volume.Decay = runif(0.5);\n      p.Volume.Punch = runif(0.6, 0.2);\n      if (runif() < 0.5) {\n        p.Phaser.Offset = runif(0.9, -0.3);\n        p.Phaser.Sweep = runif(-0.3);\n      }\n      if (runif() < 0.33) {\n        p.Frequency.ChangeSpeed = runif(0.3, 0.6);\n        p.Frequency.ChangeAmount = runif(24, -12);\n      }\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Powerup: function () {\n      var p = EmptyParams();\n      if (runif() < 0.5) {\n        p.Generator.Func = 'saw';\n      } else {\n        p.Generator.A = runif(0.6);\n      }\n      p.Frequency.Start = runif(220, 440);\n      if (runif() < 0.5) {\n        p.Frequency.Slide = runif(0.5, 0.2);\n        p.Frequency.RepeatSpeed = runif(0.4, 0.4);\n      } else {\n        p.Frequency.Slide = runif(0.2, 0.05);\n        if (runif() < 0.5) {\n          p.Vibrato.Depth = runif(0.6, 0.1);\n          p.Vibrato.Frequency = runif(30, 10);\n        }\n      }\n      p.Volume.Sustain = runif(0.4);\n      p.Volume.Decay = runif(0.4, 0.1);\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Hit: function () {\n      var p = EmptyParams();\n      p.Generator.Func = rchoose(['square', 'saw', 'noise']);\n      p.Generator.A = runif(0.6);\n      p.Generator.ASlide = runif(1, -0.5);\n      p.Frequency.Start = runif(880, 220);\n      p.Frequency.Slide = -runif(0.4, 0.3);\n      p.Volume.Sustain = runif(0.1);\n      p.Volume.Decay = runif(0.2, 0.1);\n      if (runif() < 0.5) {\n        p.Filter.HP = runif(0.3);\n      }\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Jump: function () {\n      var p = EmptyParams();\n      p.Generator.Func = 'square';\n      p.Generator.A = runif(0.6);\n      p.Frequency.Start = runif(330, 330);\n      p.Frequency.Slide = runif(0.4, 0.2);\n      p.Volume.Sustain = runif(0.3, 0.1);\n      p.Volume.Decay = runif(0.2, 0.1);\n      if (runif() < 0.5) {\n        p.Filter.HP = runif(0.3);\n      }\n      if (runif() < 0.3) {\n        p.Filter.LP = runif(-0.6, 1);\n      }\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Select: function () {\n      var p = EmptyParams();\n      p.Generator.Func = rchoose(['square', 'saw']);\n      p.Generator.A = runif(0.6);\n      p.Frequency.Start = runif(660, 220);\n      p.Volume.Sustain = runif(0.1, 0.1);\n      p.Volume.Decay = runif(0.2);\n      p.Filter.HP = 0.2;\n      RemoveEmptyParams(p);\n      return p;\n    },\n    Lucky: function () {\n      var p = EmptyParams();\n      map_object(p, function (out, moduleName) {\n        var defs = jsfx.Module[moduleName].params;\n        map_object(defs, function (def, name) {\n          if (def.C) {\n            var values = Object_keys(def.C);\n            out[name] = values[values.length * Math.random() | 0];\n          } else {\n            out[name] = Math.random() * (def.H - def.L) + def.L;\n          }\n        });\n      });\n      p.Volume.Master = 0.4;\n      p.Filter = {}; // disable filter, as it usually will clip everything\n      RemoveEmptyParams(p);\n      return p;\n    }\n  };\n\n  // GENERATORS\n\n  // uniform noise\n  jsfx.G.unoise = newGenerator(\"sample = Math.random();\");\n  // sine wave\n  jsfx.G.sine = newGenerator(\"sample = Math.sin(phase);\");\n  // saw wave\n  jsfx.G.saw = newGenerator(\"sample = 2*(phase/TAU - ((phase/TAU + 0.5)|0));\");\n  // triangle wave\n  jsfx.G.triangle = newGenerator(\"sample = Math.abs(4 * ((phase/TAU - 0.25)%1) - 2) - 1;\");\n  // square wave\n  jsfx.G.square = newGenerator(\"var s = Math.sin(phase); sample = s > A ? 1.0 : s < A ? -1.0 : A;\");\n  // simple synth\n  jsfx.G.synth = newGenerator(\"sample = Math.sin(phase) + .5*Math.sin(phase/2) + .3*Math.sin(phase/4);\");\n\n  // STATEFUL\n  var __noiseLast = 0;\n  jsfx.G.noise = newGenerator(\"if(phase % TAU < 4){__noiseLast = Math.random() * 2 - 1;} sample = __noiseLast;\");\n\n  // Karplus-Strong string\n  jsfx.G.string = {\n    create: function () {\n      var BS = 1 << 16;\n      var BM = BS - 1;\n      var buffer = createFloatArray(BS);\n      for (var i = 0; i < buffer.length; i++) {\n        buffer[i] = Math.random() * 2 - 1;\n      }\n      var head = 0;\n      return function ($, block) {\n        var TAU = Math.PI * 2;\n        var A = +$.generatorA,\n          ASlide = +$.generatorASlide,\n          B = +$.generatorB,\n          BSlide = +$.generatorBSlide;\n        var buf = buffer;\n        for (var i = 0; i < block.length; i++) {\n          var phaseSpeed = block[i];\n          var n = TAU / phaseSpeed | 0;\n          A += ASlide;\n          B += BSlide;\n          A = A < 0 ? 0 : A > 1 ? 1 : A;\n          B = B < 0 ? 0 : B > 1 ? 1 : B;\n          var t = head - n + BS & BM;\n          var sample = (buf[t - 0 + BS & BM] * 1 + buf[t - 1 + BS & BM] * A + buf[t - 2 + BS & BM] * B) / (1 + A + B);\n          buf[head] = sample;\n          block[i] = buf[head];\n          head = head + 1 & BM;\n        }\n        $.generatorA = A;\n        $.generatorB = B;\n        return block.length;\n      };\n    }\n  };\n\n  // Generates samples using given frequency and generator\n  function newGenerator(line) {\n    return new Function(\"$\", \"block\", \"\" + \"var TAU = Math.PI * 2;\\n\" + \"var sample;\\n\" + \"var phase = +$.generatorPhase,\\n\" + \"\tA = +$.generatorA, ASlide = +$.generatorASlide,\\n\" + \"\tB = +$.generatorB, BSlide = +$.generatorBSlide;\\n\" + \"\\n\" + \"for(var i = 0; i < block.length; i++){\\n\" + \"\tvar phaseSpeed = block[i];\\n\" + \"\tphase += phaseSpeed;\\n\" + \"\tif(phase > TAU){ phase -= TAU };\\n\" + \"\tA += ASlide; B += BSlide;\\n\" + \"   A = A < 0 ? 0 : A > 1 ? 1 : A;\\n\" + \"   B = B < 0 ? 0 : B > 1 ? 1 : B;\\n\" + line + \"\tblock[i] = sample;\\n\" + \"}\\n\" + \"\\n\" + \"$.generatorPhase = phase;\\n\" + \"$.generatorA = A;\\n\" + \"$.generatorB = B;\\n\" + \"return block.length;\\n\" + \"\");\n  }\n\n  // WAVE SUPPORT\n\n  // Creates an Wave byte array from audio data [-1.0 .. 1.0]\n  jsfx.CreateWave = CreateWave;\n  function CreateWave(data) {\n    if (typeof Float32Array !== \"undefined\") {\n      assert(data instanceof Float32Array, 'data must be an Float32Array');\n    }\n    var blockAlign = numChannels * bitsPerSample >> 3;\n    var byteRate = jsfx.SampleRate * blockAlign;\n    var output = createByteArray(8 + 36 + data.length * 2);\n    var p = 0;\n\n    // emits string to output\n    function S(value) {\n      for (var i = 0; i < value.length; i += 1) {\n        output[p] = value.charCodeAt(i);\n        p++;\n      }\n    }\n\n    // emits integer value to output\n    function V(value, nBytes) {\n      if (nBytes <= 0) {\n        return;\n      }\n      output[p] = value & 0xFF;\n      p++;\n      V(value >> 8, nBytes - 1);\n    }\n    /* beautify preserve:start */\n    S('RIFF');\n    V(36 + data.length * 2, 4);\n    S('WAVEfmt ');\n    V(16, 4);\n    V(1, 2);\n    V(numChannels, 2);\n    V(jsfx.SampleRate, 4);\n    V(byteRate, 4);\n    V(blockAlign, 2);\n    V(bitsPerSample, 2);\n    S('data');\n    V(data.length * 2, 4);\n    CopyFToU8(output.subarray(p), data);\n    /* beautify preserve:end */\n\n    return output;\n  }\n  ;\n\n  // Creates an Audio element from audio data [-1.0 .. 1.0]\n  jsfx.CreateAudio = CreateAudio;\n  function CreateAudio(data) {\n    var wave = CreateWave(data);\n    return new Audio('data:audio/wav;base64,' + U8ToB64(wave));\n  }\n  ;\n  jsfx.DownloadAsFile = function (audio) {\n    assert(audio instanceof Audio, 'input must be an Audio object');\n    document.location.href = audio.src;\n  };\n\n  // HELPERS\n  jsfx.Util = {};\n\n  // Copies array of Floats to a Uint8Array with 16bits per sample\n  jsfx.Util.CopyFToU8 = CopyFToU8;\n  function CopyFToU8(into, floats) {\n    assert(into.length / 2 == floats.length, 'the target buffer must be twice as large as the iinput');\n    var k = 0;\n    for (var i = 0; i < floats.length; i++) {\n      var v = +floats[i];\n      var a = v * 0x7FFF | 0;\n      a = a < -0x8000 ? -0x8000 : 0x7FFF < a ? 0x7FFF : a;\n      a += a < 0 ? 0x10000 : 0;\n      into[k] = a & 0xFF;\n      k++;\n      into[k] = a >> 8;\n      k++;\n    }\n  }\n\n  // Encodes Uint8Array with base64\n  jsfx.Util.U8ToB64 = U8ToB64;\n  function U8ToB64(data) {\n    var CHUNK = 0x8000;\n    var result = '';\n    for (var start = 0; start < data.length; start += CHUNK) {\n      var end = Math.min(start + CHUNK, data.length);\n      result += String.fromCharCode.apply(null, data.subarray(start, end));\n    }\n    return btoa(result);\n  }\n\n  // uses AudioContext sampleRate or 44100;\n  function getDefaultSampleRate() {\n    if (typeof AudioContext !== 'undefined') {\n      return new AudioContext().sampleRate;\n    }\n    return 44100;\n  }\n\n  // for checking pre/post conditions\n  function assert(condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  }\n  function clamp(v, min, max) {\n    v = +v;\n    min = +min;\n    max = +max;\n    if (v < min) {\n      return +min;\n    }\n    if (v > max) {\n      return +max;\n    }\n    return +v;\n  }\n  function clamp1(v) {\n    v = +v;\n    if (v < +0.0) {\n      return +0.0;\n    }\n    if (v > +1.0) {\n      return +1.0;\n    }\n    return +v;\n  }\n  function map_object(obj, fn) {\n    var r = {};\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        r[name] = fn(obj[name], name);\n      }\n    }\n    return r;\n  }\n\n  // uniform random\n  function runif(scale, offset) {\n    var a = Math.random();\n    if (scale !== undefined) a *= scale;\n    if (offset !== undefined) a += offset;\n    return a;\n  }\n  function rchoose(gens) {\n    return gens[gens.length * Math.random() | 0];\n  }\n  function Object_keys(obj) {\n    var r = [];\n    for (var name in obj) {\n      r.push(name);\n    }\n    return r;\n  }\n  jsfx._createFloatArray = createFloatArray;\n  function createFloatArray(N) {\n    if (typeof Float32Array === \"undefined\") {\n      var r = new Array(N);\n      for (var i = 0; i < r.length; i++) {\n        r[i] = 0.0;\n      }\n    }\n    return new Float32Array(N);\n  }\n  function createByteArray(N) {\n    if (typeof Uint8Array === \"undefined\") {\n      var r = new Array(N);\n      for (var i = 0; i < r.length; i++) {\n        r[i] = 0 | 0;\n      }\n    }\n    return new Uint8Array(N);\n  }\n  return jsfx;\n});","map":{"version":3,"names":["root","factory","module","exports","jsfx","chr","String","fromCharCode","TAU","Math","PI","bitsPerSample","numChannels","sin","pow","abs","EPSILON","AudioContext","window","webkitAudioContext","SampleRate","Sec","SetSampleRate","sampleRate","getDefaultSampleRate","Sound","params","processor","Processor","DefaultModules","block","createFloatArray","getSamplesLeft","generate","CreateAudio","Sounds","library","ondone","onprogress","audio","player","_audio","toLoad","map_object","_","name","currentTime","play","push","loaded","total","length","SoundsImmediate","FloatBuffer","modules","Node","audioContext","bufferSize","stayConnected","node","createScriptProcessor","gen","onaudioprocess","ev","outputBuffer","getChannelData","finished","setTimeout","disconnect","AudioBuffer","buffer","createBuffer","Live","BufferSize","context","volume","createGain","connect","destination","_context","_volume","_close","close","_play","Module","G","stage","PhaseSpeed","PhaseSpeedMod","Generator","SampleMod","Volume","byStage","a","b","InitDefaultParams","i","M","P","def","D","JSON","parse","stringify","state","slice","sort","setup","prototype","$","N","n","process","subarray","min","samples","envelopes","Frequency","Start","L","H","Min","Max","Slide","DeltaSlide","RepeatSpeed","ChangeAmount","ChangeSpeed","SR","phaseParams","phaseSpeed","phaseSpeedMax","phaseSpeedMin","max","phaseSlide","phaseDeltaSlide","repeatTime","repeatLimit","Infinity","arpeggiatorTime","arpeggiatorLimit","arpeggiatorMod","speed","slide","deltaSlide","arpTime","arpLimit","arpMod","Vibrato","Depth","DepthSlide","FrequencySlide","vibratoPhase","vibratoDepth","vibratoPhaseSpeed","vibratoPhaseSpeedSlide","vibratoDepthSlide","phase","depth","depthSlide","clamp1","Func","C","A","B","ASlide","BSlide","generatorPhase","generator","create","assert","generatorA","generatorASlide","generatorB","generatorBSlide","GuitarBufferSize","Guitar","guitarA","guitarB","guitarC","guitarBuffer","guitarHead","random","BS","BM","T","h","t","Filter","LP","LPSlide","LPResonance","HP","HPSlide","FilterEnabled","LPEnabled","LPPos","LPPosSlide","LPDamping","HPPos","enabled","lp","lpPos","lpPosSlide","lpSlide","lpDamping","lpEnabled","hp","hpPos","hpSlide","lpPos_","sample","PhaserBufferSize","Phaser","Offset","Sweep","phaserBuffer","phaserPos","phaserOffset","phaserOffsetSlide","pos","offset","offsetSlide","p","Master","Attack","Sustain","Punch","Decay","V","VP","S","E","e","vol","grad","end","clamp","shift","EmptyParams","_RemoveEmptyParams","RemoveEmptyParams","Object_keys","Preset","Reset","Coin","runif","Laser","rchoose","Explosion","Powerup","Hit","Jump","Select","Lucky","out","moduleName","defs","values","unoise","newGenerator","sine","saw","triangle","square","synth","__noiseLast","noise","string","head","buf","line","Function","CreateWave","data","Float32Array","blockAlign","byteRate","output","createByteArray","value","charCodeAt","nBytes","CopyFToU8","wave","Audio","U8ToB64","DownloadAsFile","document","location","href","src","Util","into","floats","k","v","CHUNK","result","start","apply","btoa","condition","message","Error","obj","fn","r","hasOwnProperty","scale","undefined","gens","_createFloatArray","Array","Uint8Array"],"sources":["D:/React Course/Sound Project/src/scripts/jsfx.js"],"sourcesContent":["(function(root, factory) {\r\n\tif (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\troot.jsfx = factory();\r\n\t}\r\n}(this, function() {\r\n\t'use strict';\r\n\r\n\tvar chr = String.fromCharCode;\r\n\tvar TAU = +Math.PI * 2;\r\n\tvar bitsPerSample = 16 | 0;\r\n\tvar numChannels = 1 | 0;\r\n\tvar sin = Math.sin;\r\n\tvar pow = Math.pow;\r\n\tvar abs = Math.abs;\r\n\tvar EPSILON = 0.000001;\r\n\r\n\tvar jsfx = {};\r\n\tvar AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n\tjsfx.SampleRate = 0 | 0;\r\n\tjsfx.Sec = 0 | 0;\r\n\r\n\tjsfx.SetSampleRate = function(sampleRate) {\r\n\t\tjsfx.SampleRate = sampleRate | 0;\r\n\t\tjsfx.Sec = sampleRate | 0;\r\n\t};\r\n\tjsfx.SetSampleRate(getDefaultSampleRate());\r\n\r\n\t// MAIN API\r\n\r\n\t// Creates a new Audio object based on the params\r\n\t// params can be a params generating function or the actual parameters\r\n\tjsfx.Sound = function(params) {\r\n\t\tvar processor = new Processor(params, jsfx.DefaultModules);\r\n\t\tvar block = createFloatArray(processor.getSamplesLeft());\r\n\t\tprocessor.generate(block);\r\n\t\treturn CreateAudio(block);\r\n\t};\r\n\r\n\t// Same as Sounds, but avoids locking the browser for too long\r\n\t// in case you have a large amount of sounds to generate\r\n\tjsfx.Sounds = function(library, ondone, onprogress) {\r\n\t\tvar audio = {};\r\n\t\tvar player = {};\r\n\t\tplayer._audio = audio;\r\n\r\n\t\tvar toLoad = [];\r\n\r\n\t\t// create playing functions\r\n\t\tmap_object(library, function(_, name) {\r\n\t\t\tplayer[name] = function() {\r\n\t\t\t\tif (typeof audio[name] !== \"undefined\") {\r\n\t\t\t\t\taudio[name].currentTime = 0.0;\r\n\t\t\t\t\taudio[name].play();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\ttoLoad.push(name);\r\n\t\t});\r\n\r\n\t\tvar loaded = 0,\r\n\t\t\ttotal = toLoad.length;\r\n\r\n\t\t// function next() {\r\n\t\t// \tif (toLoad.length == 0) {\r\n\t\t// \t\tondone && ondone(sounds);\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tvar name = toLoad.shift();\r\n\t\t// \taudio[name] = jsfx.Sound(library[name]);\r\n\t\t// \tloaded++;\r\n\t\t// \tonprogress && onprogress(name, loaded, total);\r\n\r\n\t\t// \twindow.setTimeout(next, 30);\r\n\t\t// }\r\n\t\t// next();\r\n\r\n\t\treturn player;\r\n\t}\r\n\r\n\t// SoundsImmediate takes a named set of params, and generates multiple\r\n\t// sound objects at once.\r\n\tjsfx.SoundsImmediate = function(library) {\r\n\t\tvar audio = {};\r\n\t\tvar player = {};\r\n\t\tplayer._audio = audio;\r\n\t\tmap_object(library, function(params, name) {\r\n\t\t\taudio[name] = jsfx.Sound(params);\r\n\t\t\tplayer[name] = function() {\r\n\t\t\t\tif (typeof audio[name] !== \"undefined\") {\r\n\t\t\t\t\taudio[name].currentTime = 0.0;\r\n\t\t\t\t\taudio[name].play();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t})\r\n\t\treturn player;\r\n\t};\r\n\r\n\t// FloatBuffer creates a FloatArray filled with audio\r\n\tjsfx.FloatBuffer = function(params, modules) {\r\n\t\tvar processor = new Processor(params, jsfx.DefaultModules);\r\n\t\tvar block = createFloatArray(processor.getSamplesLeft());\r\n\t\tprocessor.generate(block);\r\n\t\treturn block;\r\n\t};\r\n\r\n\tif (typeof AudioContext !== \"undefined\") {\r\n\t\t// Node creates a new AudioContext ScriptProcessor that outputs the\r\n\t\t// sound. It will automatically disconnect, unless otherwise specified.\r\n\t\tjsfx.Node = function(audioContext, params, modules, bufferSize, stayConnected) {\r\n\t\t\tvar node = audioContext.createScriptProcessor(bufferSize, 0, 1);\r\n\t\t\tvar gen = new Processor(params, modules || jsfx.DefaultModules);\r\n\t\t\tnode.onaudioprocess = function(ev) {\r\n\t\t\t\tvar block = ev.outputBuffer.getChannelData(0);\r\n\t\t\t\tgen.generate(block);\r\n\t\t\t\tif (!stayConnected && gen.finished) {\r\n\t\t\t\t\t// we need to do an async disconnect, otherwise Chrome may\r\n\t\t\t\t\t// glitch\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tnode.disconnect();\r\n\t\t\t\t\t}, 30);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t}\r\n\r\n\t\t// AudioBuffer creates a buffer filled with the proper audio\r\n\t\t// This is useful, when you want to use AudioContext.BufferSource\r\n\t\tjsfx.AudioBuffer = function(audioContext, params, modules) {\r\n\t\t\tvar processor = new Processor(params, modules || jsfx.DefaultModules);\r\n\t\t\tvar buffer = audioContext.createBuffer(numChannels, processor.getSamplesLeft(), jsfx.SampleRate);\r\n\t\t\tvar block = buffer.getChannelData(0);\r\n\t\t\tprocessor.generate(block);\r\n\t\t\treturn buffer;\r\n\t\t};\r\n\r\n\t\t// Live creates an managed AudioContext for playing.\r\n\t\t// This is useful, when you want to use procedurally generated sounds.\r\n\t\tjsfx.Live = function(library, modules, BufferSize) {\r\n\t\t\t//TODO: add limit for number of notes played at the same time\r\n\t\t\tBufferSize = BufferSize || 2048;\r\n\t\t\tvar player = {};\r\n\r\n\t\t\tvar context = new AudioContext();\r\n\t\t\tvar volume = context.createGain();\r\n\t\t\tvolume.connect(context.destination);\r\n\r\n\t\t\tplayer._context = context;\r\n\t\t\tplayer._volume = volume;\r\n\r\n\t\t\tmap_object(library, function(params, name) {\r\n\t\t\t\tplayer[name] = function() {\r\n\t\t\t\t\tvar node = jsfx.Node(context, params, modules, BufferSize);\r\n\t\t\t\t\tnode.connect(volume);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tplayer._close = function() {\r\n\t\t\t\tcontext.close();\r\n\t\t\t};\r\n\r\n\t\t\tplayer._play = function(params) {\r\n\t\t\t\tvar node = jsfx.Node(context, params, modules, BufferSize);\r\n\t\t\t\tnode.connect(volume);\r\n\t\t\t};\r\n\r\n\t\t\treturn player;\r\n\t\t}\r\n\t} else {\r\n\t\tjsfx.Live = jsfx.Sounds;\r\n\t}\r\n\r\n\t// SOUND GENERATION\r\n\tjsfx.Module = {};\r\n\r\n\t// generators\r\n\tjsfx.G = {};\r\n\r\n\tvar stage = jsfx.stage = {\r\n\t\tPhaseSpeed: 0,\r\n\t\tPhaseSpeedMod: 10,\r\n\t\tGenerator: 20,\r\n\t\tSampleMod: 30,\r\n\t\tVolume: 40\r\n\t};\r\n\r\n\tfunction byStage(a, b) {\r\n\t\treturn a.stage - b.stage;\r\n\t}\r\n\r\n\tjsfx.InitDefaultParams = InitDefaultParams;\r\n\r\n\tfunction InitDefaultParams(params, modules) {\r\n\t\t// setup modules\r\n\t\tfor (var i = 0; i < modules.length; i += 1) {\r\n\t\t\tvar M = modules[i];\r\n\t\t\tvar P = params[M.name] || {};\r\n\r\n\t\t\t// add missing parameters\r\n\t\t\tmap_object(M.params, function(def, name) {\r\n\t\t\t\tif (typeof P[name] === 'undefined') {\r\n\t\t\t\t\tP[name] = def.D;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tparams[M.name] = P;\r\n\t\t}\r\n\t}\r\n\r\n\t// Generates a stateful sound effect processor\r\n\t// params can be a function that creates a parameter set\r\n\tjsfx.Processor = Processor;\r\n\r\n\tfunction Processor(params, modules) {\r\n\t\tparams = params || {};\r\n\t\tmodules = modules || jsfx.DefaultModules;\r\n\r\n\t\tif (typeof params === 'function') {\r\n\t\t\tparams = params();\r\n\t\t} else {\r\n\t\t\tparams = JSON.parse(JSON.stringify(params))\r\n\t\t}\r\n\t\tthis.finished = false;\r\n\r\n\t\tthis.state = {\r\n\t\t\tSampleRate: params.SampleRate || jsfx.SampleRate\r\n\t\t};\r\n\r\n\t\t// sort modules\r\n\t\tmodules = modules.slice();\r\n\t\tmodules.sort(byStage)\r\n\t\tthis.modules = modules;\r\n\r\n\t\t// init missing params\r\n\t\tInitDefaultParams(params, modules);\r\n\r\n\t\t// setup modules\r\n\t\tfor (var i = 0; i < this.modules.length; i += 1) {\r\n\t\t\tvar M = this.modules[i];\r\n\t\t\tthis.modules[i].setup(this.state, params[M.name]);\r\n\t\t}\r\n\t}\r\n\tProcessor.prototype = {\r\n\t\t//TODO: see whether this can be converted to a module\r\n\t\tgenerate: function(block) {\r\n\t\t\tfor (var i = 0 | 0; i < block.length; i += 1) {\r\n\t\t\t\tblock[i] = 0;\r\n\t\t\t}\r\n\t\t\tif (this.finished) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar $ = this.state,\r\n\t\t\t\tN = block.length | 0;\r\n\t\t\tfor (var i = 0; i < this.modules.length; i += 1) {\r\n\t\t\t\tvar M = this.modules[i];\r\n\t\t\t\tvar n = M.process($, block.subarray(0, N)) | 0;\r\n\t\t\t\tN = Math.min(N, n);\r\n\t\t\t}\r\n\t\t\tif (N < block.length) {\r\n\t\t\t\tthis.finished = true;\r\n\t\t\t}\r\n\t\t\tfor (var i = N; i < block.length; i++) {\r\n\t\t\t\tblock[i] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetSamplesLeft: function() {\r\n\t\t\tvar samples = 0;\r\n\t\t\tfor (var i = 0; i < this.state.envelopes.length; i += 1) {\r\n\t\t\t\tsamples += this.state.envelopes[i].N;\r\n\t\t\t}\r\n\t\t\tif (samples === 0) {\r\n\t\t\t\tsamples = 3 * this.state.SampleRate;\r\n\t\t\t}\r\n\t\t\treturn samples;\r\n\t\t}\r\n\t};\r\n\r\n\t// Frequency\r\n\tjsfx.Module.Frequency = {\r\n\t\tname: 'Frequency',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\tStart: { L:30, H:1800, D:440  },\r\n\r\n\t\t\tMin: { L:30, H:1800, D:30    },\r\n\t\t\tMax: { L:30, H:1800, D:1800  },\r\n\r\n\t\t\tSlide:      { L:-1, H:1, D:0 },\r\n\t\t\tDeltaSlide: { L:-1, H:1, D:0 },\r\n\r\n\t\t\tRepeatSpeed:  { L:0, H: 3.0, D: 0 },\r\n\r\n\t\t\tChangeAmount: { L:-12, H:12, D:0 },\r\n\t\t\tChangeSpeed : { L:  0, H:1,  D:0 }\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.PhaseSpeed,\r\n\t\tsetup: function($, P) {\r\n\t\t\tvar SR = $.SampleRate;\r\n\r\n\t\t\t$.phaseParams = P;\r\n\r\n\t\t\t$.phaseSpeed = P.Start * TAU / SR;\r\n\t\t\t$.phaseSpeedMax = P.Max * TAU / SR;\r\n\t\t\t$.phaseSpeedMin = P.Min * TAU / SR;\r\n\r\n\t\t\t$.phaseSpeedMin = Math.min($.phaseSpeedMin, $.phaseSpeed);\r\n\t\t\t$.phaseSpeedMax = Math.max($.phaseSpeedMax, $.phaseSpeed);\r\n\r\n\t\t\t$.phaseSlide = 1.0 + pow(P.Slide, 3.0) * 64.0 / SR;\r\n\t\t\t$.phaseDeltaSlide = pow(P.DeltaSlide, 3.0) / (SR * 1000);\r\n\r\n\t\t\t$.repeatTime = 0;\r\n\t\t\t$.repeatLimit = Infinity;\r\n\t\t\tif (P.RepeatSpeed > 0) {\r\n\t\t\t\t$.repeatLimit = P.RepeatSpeed * SR;\r\n\t\t\t}\r\n\r\n\t\t\t$.arpeggiatorTime = 0;\r\n\t\t\t$.arpeggiatorLimit = P.ChangeSpeed * SR;\r\n\t\t\tif (P.ChangeAmount == 0) {\r\n\t\t\t\t$.arpeggiatorLimit = Infinity;\r\n\t\t\t}\r\n\t\t\t$.arpeggiatorMod = 1 + P.ChangeAmount / 12.0;\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\tvar speed = +$.phaseSpeed,\r\n\t\t\t\tmin = +$.phaseSpeedMin,\r\n\t\t\t\tmax = +$.phaseSpeedMax,\r\n\t\t\t\tslide = +$.phaseSlide,\r\n\t\t\t\tdeltaSlide = +$.phaseDeltaSlide;\r\n\r\n\t\t\tvar repeatTime = $.repeatTime,\r\n\t\t\t\trepeatLimit = $.repeatLimit;\r\n\r\n\t\t\tvar arpTime = $.arpeggiatorTime,\r\n\t\t\t\tarpLimit = $.arpeggiatorLimit,\r\n\t\t\t\tarpMod = $.arpeggiatorMod;\r\n\r\n\t\t\tfor (var i = 0; i < block.length; i++) {\r\n\t\t\t\tslide += deltaSlide;\r\n\t\t\t\tspeed *= slide;\r\n\t\t\t\tspeed = speed < min ? min : speed > max ? max : speed;\r\n\r\n\t\t\t\tif (repeatTime > repeatLimit) {\r\n\t\t\t\t\tthis.setup($, $.phaseParams);\r\n\t\t\t\t\treturn i + this.process($, block.subarray(i)) - 1;\r\n\t\t\t\t}\r\n\t\t\t\trepeatTime++;\r\n\r\n\t\t\t\tif (arpTime > arpLimit) {\r\n\t\t\t\t\tspeed *= arpMod;\r\n\t\t\t\t\tarpTime = 0;\r\n\t\t\t\t\tarpLimit = Infinity;\r\n\t\t\t\t}\r\n\t\t\t\tarpTime++;\r\n\r\n\t\t\t\tblock[i] += speed;\r\n\t\t\t}\r\n\r\n\t\t\t$.repeatTime = repeatTime;\r\n\t\t\t$.arpeggiatorTime = arpTime;\r\n\t\t\t$.arpeggiatorLimit = arpLimit;\r\n\r\n\t\t\t$.phaseSpeed = speed;\r\n\t\t\t$.phaseSlide = slide;\r\n\r\n\t\t\treturn block.length;\r\n\t\t}\r\n\t};\r\n\r\n\t// Vibrato\r\n\tjsfx.Module.Vibrato = {\r\n\t\tname: 'Vibrato',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\tDepth:      {L: 0, H:1, D:0},\r\n\t\t\tDepthSlide: {L:-1, H:1, D:0},\r\n\r\n\t\t\tFrequency:      {L:  0.01, H:48, D:30},\r\n\t\t\tFrequencySlide: {L: -1.00, H: 1, D:0}\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.PhaseSpeedMod,\r\n\t\tsetup: function($, P) {\r\n\t\t\tvar SR = $.SampleRate;\r\n\t\t\t$.vibratoPhase = 0;\r\n\t\t\t$.vibratoDepth = P.Depth;\r\n\t\t\t$.vibratoPhaseSpeed = P.Frequency * TAU / SR;\r\n\r\n\t\t\t$.vibratoPhaseSpeedSlide = 1.0 + pow(P.FrequencySlide, 3.0) * 3.0 / SR;\r\n\t\t\t$.vibratoDepthSlide = P.DepthSlide / SR;\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\tvar phase = +$.vibratoPhase,\r\n\t\t\t\tdepth = +$.vibratoDepth,\r\n\t\t\t\tspeed = +$.vibratoPhaseSpeed,\r\n\t\t\t\tslide = +$.vibratoPhaseSpeedSlide,\r\n\t\t\t\tdepthSlide = +$.vibratoDepthSlide;\r\n\r\n\t\t\tif ((depth == 0) && (depthSlide <= 0)) {\r\n\t\t\t\treturn block.length;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < block.length; i++) {\r\n\t\t\t\tphase += speed;\r\n\t\t\t\tif (phase > TAU) {\r\n\t\t\t\t\tphase -= TAU\r\n\t\t\t\t};\r\n\t\t\t\tblock[i] += block[i] * sin(phase) * depth;\r\n\r\n\t\t\t\tspeed *= slide;\r\n\t\t\t\tdepth += depthSlide;\r\n\t\t\t\tdepth = clamp1(depth);\r\n\t\t\t}\r\n\r\n\t\t\t$.vibratoPhase = phase;\r\n\t\t\t$.vibratoDepth = depth;\r\n\t\t\t$.vibratoPhaseSpeed = speed;\r\n\t\t\treturn block.length;\r\n\t\t}\r\n\t};\r\n\r\n\t// Generator\r\n\tjsfx.Module.Generator = {\r\n\t\tname: 'Generator',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\t// C = choose\r\n\t\t\tFunc: {C: jsfx.G, D:'square'},\r\n\r\n\t\t\tA: {L: 0, H: 1, D: 0},\r\n\t\t\tB: {L: 0, H: 1, D: 0},\r\n\r\n\t\t\tASlide: {L: -1, H: 1, D: 0},\r\n\t\t\tBSlide: {L: -1, H: 1, D: 0}\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.Generator,\r\n\t\tsetup: function($, P) {\r\n\t\t\t$.generatorPhase = 0;\r\n\r\n\t\t\tif (typeof P.Func === 'string') {\r\n\t\t\t\t$.generator = jsfx.G[P.Func];\r\n\t\t\t} else {\r\n\t\t\t\t$.generator = P.Func;\r\n\t\t\t}\r\n\t\t\tif (typeof $.generator === 'object') {\r\n\t\t\t\t$.generator = $.generator.create();\r\n\t\t\t}\r\n\t\t\tassert(typeof $.generator === 'function', 'generator must be a function')\r\n\r\n\t\t\t$.generatorA = P.A;\r\n\t\t\t$.generatorASlide = P.ASlide;\r\n\t\t\t$.generatorB = P.B;\r\n\t\t\t$.generatorBSlide = P.BSlide;\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\treturn $.generator($, block);\r\n\t\t}\r\n\t};\r\n\r\n\t// Karplus Strong algorithm for string sound\r\n\tvar GuitarBufferSize = 1 << 16;\r\n\tjsfx.Module.Guitar = {\r\n\t\tname: 'Guitar',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\tA: {L:0.0, H:1.0, D: 1},\r\n\t\t\tB: {L:0.0, H:1.0, D: 1},\r\n\t\t\tC: {L:0.0, H:1.0, D: 1}\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.Generator,\r\n\t\tsetup: function($, P) {\r\n\t\t\t$.guitarA = P.A;\r\n\t\t\t$.guitarB = P.B;\r\n\t\t\t$.guitarC = P.C;\r\n\r\n\t\t\t$.guitarBuffer = createFloatArray(GuitarBufferSize);\r\n\t\t\t$.guitarHead = 0;\r\n\t\t\tvar B = $.guitarBuffer;\r\n\t\t\tfor (var i = 0; i < B.length; i++) {\r\n\t\t\t\tB[i] = Math.random() * 2 - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\tvar BS = GuitarBufferSize,\r\n\t\t\t\tBM = BS - 1;\r\n\r\n\t\t\tvar A = +$.guitarA,\r\n\t\t\t\tB = +$.guitarB,\r\n\t\t\t\tC = +$.guitarC;\r\n\t\t\tvar T = A + B + C;\r\n\t\t\tvar h = $.guitarHead;\r\n\r\n\t\t\tvar buffer = $.guitarBuffer;\r\n\t\t\tfor (var i = 0; i < block.length; i++) {\r\n\t\t\t\t// buffer size\r\n\t\t\t\tvar n = (TAU / block[i]) | 0;\r\n\t\t\t\tn = n > BS ? BS : n;\r\n\r\n\t\t\t\t// tail\r\n\t\t\t\tvar t = ((h - n) + BS) & BM;\r\n\t\t\t\tbuffer[h] =\r\n\t\t\t\t\t(buffer[(t - 0 + BS) & BM] * A +\r\n\t\t\t\t\t\tbuffer[(t - 1 + BS) & BM] * B +\r\n\t\t\t\t\t\tbuffer[(t - 2 + BS) & BM] * C) / T;\r\n\r\n\t\t\t\tblock[i] = buffer[h];\r\n\t\t\t\th = (h + 1) & BM;\r\n\t\t\t}\r\n\r\n\t\t\t$.guitarHead = h;\r\n\t\t\treturn block.length;\r\n\t\t}\r\n\t}\r\n\r\n\t// Low/High-Pass Filter\r\n\tjsfx.Module.Filter = {\r\n\t\tname: 'Filter',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\tLP:          {L: 0, H:1, D:1},\r\n\t\t\tLPSlide:     {L:-1, H:1, D:0},\r\n\t\t\tLPResonance: {L: 0, H:1, D:0},\r\n\t\t\tHP:          {L: 0, H:1, D:0},\r\n\t\t\tHPSlide:     {L:-1, H:1, D:0}\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.SampleMod + 0,\r\n\t\tsetup: function($, P) {\r\n\t\t\t$.FilterEnabled = (P.HP > EPSILON) || (P.LP < 1 - EPSILON);\r\n\r\n\t\t\t$.LPEnabled = P.LP < 1 - EPSILON;\r\n\t\t\t$.LP = pow(P.LP, 3.0) / 10;\r\n\t\t\t$.LPSlide = 1.0 + P.LPSlide * 100 / $.SampleRate;\r\n\t\t\t$.LPPos = 0;\r\n\t\t\t$.LPPosSlide = 0;\r\n\r\n\t\t\t$.LPDamping = 5.0 / (1.0 + pow(P.LPResonance, 2) * 20) * (0.01 + P.LP);\r\n\t\t\t$.LPDamping = 1.0 - Math.min($.LPDamping, 0.8);\r\n\r\n\t\t\t$.HP = pow(P.HP, 2.0) / 10;\r\n\t\t\t$.HPPos = 0;\r\n\t\t\t$.HPSlide = 1.0 + P.HPSlide * 100 / $.SampleRate;\r\n\t\t},\r\n\t\tenabled: function($) {\r\n\t\t\treturn $.FilterEnabled;\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\tif (!this.enabled($)) {\r\n\t\t\t\treturn block.length;\r\n\t\t\t}\r\n\r\n\t\t\tvar lp = +$.LP;\r\n\t\t\tvar lpPos = +$.LPPos;\r\n\t\t\tvar lpPosSlide = +$.LPPosSlide;\r\n\t\t\tvar lpSlide = +$.LPSlide;\r\n\t\t\tvar lpDamping = +$.LPDamping;\r\n\t\t\tvar lpEnabled = +$.LPEnabled;\r\n\r\n\t\t\tvar hp = +$.HP;\r\n\t\t\tvar hpPos = +$.HPPos;\r\n\t\t\tvar hpSlide = +$.HPSlide;\r\n\r\n\t\t\tfor (var i = 0; i < block.length; i++) {\r\n\t\t\t\tif ((hp > EPSILON) || (hp < -EPSILON)) {\r\n\t\t\t\t\thp *= hpSlide;\r\n\t\t\t\t\thp = hp < EPSILON ? EPSILON : hp > 0.1 ? 0.1 : hp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lpPos_ = lpPos;\r\n\r\n\t\t\t\tlp *= lpSlide;\r\n\t\t\t\tlp = lp < 0 ? lp = 0 : lp > 0.1 ? 0.1 : lp;\r\n\r\n\t\t\t\tvar sample = block[i];\r\n\t\t\t\tif (lpEnabled) {\r\n\t\t\t\t\tlpPosSlide += (sample - lpPos) * lp;\r\n\t\t\t\t\tlpPosSlide *= lpDamping;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlpPos = sample;\r\n\t\t\t\t\tlpPosSlide = 0;\r\n\t\t\t\t}\r\n\t\t\t\tlpPos += lpPosSlide;\r\n\r\n\t\t\t\thpPos += lpPos - lpPos_;\r\n\t\t\t\thpPos *= 1.0 - hp;\r\n\r\n\t\t\t\tblock[i] = hpPos;\r\n\t\t\t}\r\n\r\n\t\t\t$.LPPos = lpPos;\r\n\t\t\t$.LPPosSlide = lpPosSlide;\r\n\t\t\t$.LP = lp;\r\n\t\t\t$.HP = hp;\r\n\t\t\t$.HPPos = hpPos;\r\n\r\n\t\t\treturn block.length;\r\n\t\t}\r\n\t};\r\n\r\n\t// Phaser Effect\r\n\tvar PhaserBufferSize = 1 << 10;\r\n\tjsfx.Module.Phaser = {\r\n\t\tname: 'Phaser',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\tOffset: {L:-1, H:1, D:0},\r\n\t\t\tSweep:  {L:-1, H:1, D:0}\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.SampleMod + 1,\r\n\t\tsetup: function($, P) {\r\n\t\t\t$.phaserBuffer = createFloatArray(PhaserBufferSize);\r\n\t\t\t$.phaserPos = 0;\r\n\t\t\t$.phaserOffset = pow(P.Offset, 2.0) * (PhaserBufferSize - 4);\r\n\t\t\t$.phaserOffsetSlide = pow(P.Sweep, 3.0) * 4000 / $.SampleRate;\r\n\t\t},\r\n\t\tenabled: function($) {\r\n\t\t\treturn (abs($.phaserOffsetSlide) > EPSILON) ||\r\n\t\t\t\t(abs($.phaserOffset) > EPSILON);\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\tif (!this.enabled($)) {\r\n\t\t\t\treturn block.length;\r\n\t\t\t}\r\n\r\n\t\t\tvar BS = PhaserBufferSize,\r\n\t\t\t\tBM = BS - 1;\r\n\r\n\t\t\tvar buffer = $.phaserBuffer,\r\n\t\t\t\tpos = $.phaserPos | 0,\r\n\t\t\t\toffset = +$.phaserOffset,\r\n\t\t\t\toffsetSlide = +$.phaserOffsetSlide;\r\n\r\n\t\t\tfor (var i = 0; i < block.length; i++) {\r\n\t\t\t\toffset += offsetSlide;\r\n\t\t\t\t//TODO: check whether this is correct\r\n\t\t\t\tif (offset < 0) {\r\n\t\t\t\t\toffset = -offset;\r\n\t\t\t\t\toffsetSlide = -offsetSlide;\r\n\t\t\t\t}\r\n\t\t\t\tif (offset > BM) {\r\n\t\t\t\t\toffset = BM;\r\n\t\t\t\t\toffsetSlide = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuffer[pos] = block[i];\r\n\t\t\t\tvar p = (pos - (offset | 0) + BS) & BM;\r\n\t\t\t\tblock[i] += buffer[p];\r\n\r\n\t\t\t\tpos = ((pos + 1) & BM) | 0;\r\n\t\t\t}\r\n\r\n\t\t\t$.phaserPos = pos;\r\n\t\t\t$.phaserOffset = offset;\r\n\t\t\treturn block.length;\r\n\t\t}\r\n\t};\r\n\r\n\t// Volume dynamic control with Attack-Sustain-Decay\r\n\t//   ATTACK  | 0              - Volume + Punch\r\n\t//   SUSTAIN | Volume + Punch - Volume\r\n\t//   DECAY   | Volume         - 0\r\n\tjsfx.Module.Volume = {\r\n\t\tname: 'Volume',\r\n\t\tparams: {\r\n\t\t\t/* beautify preserve:start */\r\n\t\t\tMaster:  { L: 0, H: 1, D: 0.5 },\r\n\t\t\tAttack:  { L: 0.001, H: 1, D: 0.01 },\r\n\t\t\tSustain: { L: 0, H: 2, D: 0.3 },\r\n\t\t\tPunch:   { L: 0, H: 3, D: 1.0 },\r\n\t\t\tDecay:   { L: 0.001, H: 2, D: 1.0 }\r\n\t\t\t/* beautify preserve:end */\r\n\t\t},\r\n\t\tstage: stage.Volume,\r\n\t\tsetup: function($, P) {\r\n\t\t\tvar SR = $.SampleRate;\r\n\t\t\tvar V = P.Master;\r\n\t\t\tvar VP = V * (1 + P.Punch);\r\n\t\t\t$.envelopes = [\r\n\t\t\t\t// S = start volume, E = end volume, N = duration in samples\r\n\t\t\t\t{\r\n\t\t\t\t\tS: 0,\r\n\t\t\t\t\tE: V,\r\n\t\t\t\t\tN: (P.Attack * SR) | 0\r\n\t\t\t\t}, // Attack\r\n\t\t\t\t{\r\n\t\t\t\t\tS: VP,\r\n\t\t\t\t\tE: V,\r\n\t\t\t\t\tN: (P.Sustain * SR) | 0\r\n\t\t\t\t}, // Sustain\r\n\t\t\t\t{\r\n\t\t\t\t\tS: V,\r\n\t\t\t\t\tE: 0,\r\n\t\t\t\t\tN: (P.Decay * SR) | 0\r\n\t\t\t\t} // Decay\r\n\t\t\t];\r\n\t\t\t// G = volume gradient\r\n\t\t\tfor (var i = 0; i < $.envelopes.length; i += 1) {\r\n\t\t\t\tvar e = $.envelopes[i];\r\n\t\t\t\te.G = (e.E - e.S) / e.N;\r\n\t\t\t}\r\n\t\t},\r\n\t\tprocess: function($, block) {\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (($.envelopes.length > 0) && (i < block.length)) {\r\n\t\t\t\tvar E = $.envelopes[0];\r\n\t\t\t\tvar vol = E.S,\r\n\t\t\t\t\tgrad = E.G;\r\n\r\n\t\t\t\tvar N = Math.min(block.length - i, E.N) | 0;\r\n\t\t\t\tvar end = (i + N) | 0;\r\n\t\t\t\tfor (; i < end; i += 1) {\r\n\t\t\t\t\tblock[i] *= vol;\r\n\t\t\t\t\tvol += grad;\r\n\t\t\t\t\tvol = clamp(vol, 0, 10);\r\n\t\t\t\t}\r\n\t\t\t\tE.S = vol;\r\n\t\t\t\tE.N -= N;\r\n\t\t\t\tif (E.N <= 0) {\r\n\t\t\t\t\t$.envelopes.shift();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn i;\r\n\t\t}\r\n\t};\r\n\r\n\t// PRESETS\r\n\r\n\tjsfx.DefaultModules = [\r\n\t\tjsfx.Module.Frequency,\r\n\t\tjsfx.Module.Vibrato,\r\n\t\tjsfx.Module.Generator,\r\n\t\tjsfx.Module.Filter,\r\n\t\tjsfx.Module.Phaser,\r\n\t\tjsfx.Module.Volume\r\n\t];\r\n\tjsfx.DefaultModules.sort(byStage);\r\n\r\n\tjsfx.EmptyParams = EmptyParams;\r\n\r\n\tfunction EmptyParams() {\r\n\t\treturn map_object(jsfx.Module, function() {\r\n\t\t\treturn {}\r\n\t\t});\r\n\t}\r\n\r\n\tjsfx._RemoveEmptyParams = RemoveEmptyParams;\r\n\r\n\tfunction RemoveEmptyParams(params) {\r\n\t\tfor (var name in params) {\r\n\t\t\tif (Object_keys(params[name]).length == 0) {\r\n\t\t\t\tdelete params[name];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tjsfx.Preset = {\r\n\t\tReset: function() {\r\n\t\t\treturn EmptyParams();\r\n\t\t},\r\n\t\tCoin: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tp.Frequency.Start = runif(880, 660);\r\n\t\t\tp.Volume.Sustain = runif(0.1);\r\n\t\t\tp.Volume.Decay = runif(0.4, 0.1);\r\n\t\t\tp.Volume.Punch = runif(0.3, 0.3);\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Frequency.ChangeSpeed = runif(0.15, 0.1);\r\n\t\t\t\tp.Frequency.ChangeAmount = runif(8, 4);\r\n\t\t\t}\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tLaser: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tp.Generator.Func = rchoose(['square', 'saw', 'sine']);\r\n\r\n\t\t\tif (runif() < 0.33) {\r\n\t\t\t\tp.Frequency.Start = runif(880, 440);\r\n\t\t\t\tp.Frequency.Min = runif(0.1);\r\n\t\t\t\tp.Frequency.Slide = runif(0.3, -0.8);\r\n\t\t\t} else {\r\n\t\t\t\tp.Frequency.Start = runif(1200, 440);\r\n\t\t\t\tp.Frequency.Min = p.Frequency.Start - runif(880, 440);\r\n\t\t\t\tif (p.Frequency.Min < 110) {\r\n\t\t\t\t\tp.Frequency.Min = 110;\r\n\t\t\t\t}\r\n\t\t\t\tp.Frequency.Slide = runif(0.3, -1);\r\n\t\t\t}\r\n\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Generator.A = runif(0.5);\r\n\t\t\t\tp.Generator.ASlide = runif(0.2);\r\n\t\t\t} else {\r\n\t\t\t\tp.Generator.A = runif(0.5, 0.4);\r\n\t\t\t\tp.Generator.ASlide = runif(0.7);\r\n\t\t\t}\r\n\r\n\t\t\tp.Volume.Sustain = runif(0.2, 0.1);\r\n\t\t\tp.Volume.Decay = runif(0.4);\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Volume.Punch = runif(0.3);\r\n\t\t\t}\r\n\t\t\tif (runif() < 0.33) {\r\n\t\t\t\tp.Phaser.Offset = runif(0.2);\r\n\t\t\t\tp.Phaser.Sweep = runif(0.2);\r\n\t\t\t}\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Filter.HP = runif(0.3);\r\n\t\t\t}\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tExplosion: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tp.Generator.Func = 'noise';\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Frequency.Start = runif(440, 40);\r\n\t\t\t\tp.Frequency.Slide = runif(0.4, -0.1);\r\n\t\t\t} else {\r\n\t\t\t\tp.Frequency.Start = runif(1600, 220);\r\n\t\t\t\tp.Frequency.Slide = runif(-0.2, -0.2);\r\n\t\t\t}\r\n\r\n\t\t\tif (runif() < 0.2) {\r\n\t\t\t\tp.Frequency.Slide = 0;\r\n\t\t\t}\r\n\t\t\tif (runif() < 0.3) {\r\n\t\t\t\tp.Frequency.RepeatSpeed = runif(0.5, 0.3);\r\n\t\t\t}\r\n\r\n\t\t\tp.Volume.Sustain = runif(0.3, 0.1);\r\n\t\t\tp.Volume.Decay = runif(0.5);\r\n\t\t\tp.Volume.Punch = runif(0.6, 0.2);\r\n\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Phaser.Offset = runif(0.9, -0.3);\r\n\t\t\t\tp.Phaser.Sweep = runif(-0.3);\r\n\t\t\t}\r\n\r\n\t\t\tif (runif() < 0.33) {\r\n\t\t\t\tp.Frequency.ChangeSpeed = runif(0.3, 0.6);\r\n\t\t\t\tp.Frequency.ChangeAmount = runif(24, -12);\r\n\t\t\t}\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tPowerup: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Generator.Func = 'saw';\r\n\t\t\t} else {\r\n\t\t\t\tp.Generator.A = runif(0.6);\r\n\t\t\t}\r\n\r\n\t\t\tp.Frequency.Start = runif(220, 440);\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Frequency.Slide = runif(0.5, 0.2);\r\n\t\t\t\tp.Frequency.RepeatSpeed = runif(0.4, 0.4);\r\n\t\t\t} else {\r\n\t\t\t\tp.Frequency.Slide = runif(0.2, 0.05);\r\n\t\t\t\tif (runif() < 0.5) {\r\n\t\t\t\t\tp.Vibrato.Depth = runif(0.6, 0.1);\r\n\t\t\t\t\tp.Vibrato.Frequency = runif(30, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tp.Volume.Sustain = runif(0.4);\r\n\t\t\tp.Volume.Decay = runif(0.4, 0.1);\r\n\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tHit: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tp.Generator.Func = rchoose(['square', 'saw', 'noise']);\r\n\t\t\tp.Generator.A = runif(0.6);\r\n\t\t\tp.Generator.ASlide = runif(1, -0.5);\r\n\r\n\t\t\tp.Frequency.Start = runif(880, 220);\r\n\t\t\tp.Frequency.Slide = -runif(0.4, 0.3);\r\n\r\n\t\t\tp.Volume.Sustain = runif(0.1);\r\n\t\t\tp.Volume.Decay = runif(0.2, 0.1);\r\n\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Filter.HP = runif(0.3);\r\n\t\t\t}\r\n\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tJump: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tp.Generator.Func = 'square';\r\n\t\t\tp.Generator.A = runif(0.6);\r\n\r\n\t\t\tp.Frequency.Start = runif(330, 330);\r\n\t\t\tp.Frequency.Slide = runif(0.4, 0.2);\r\n\r\n\t\t\tp.Volume.Sustain = runif(0.3, 0.1);\r\n\t\t\tp.Volume.Decay = runif(0.2, 0.1);\r\n\r\n\t\t\tif (runif() < 0.5) {\r\n\t\t\t\tp.Filter.HP = runif(0.3);\r\n\t\t\t}\r\n\t\t\tif (runif() < 0.3) {\r\n\t\t\t\tp.Filter.LP = runif(-0.6, 1);\r\n\t\t\t}\r\n\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tSelect: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tp.Generator.Func = rchoose(['square', 'saw']);\r\n\t\t\tp.Generator.A = runif(0.6);\r\n\r\n\t\t\tp.Frequency.Start = runif(660, 220);\r\n\r\n\t\t\tp.Volume.Sustain = runif(0.1, 0.1);\r\n\t\t\tp.Volume.Decay = runif(0.2);\r\n\r\n\t\t\tp.Filter.HP = 0.2;\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t},\r\n\t\tLucky: function() {\r\n\t\t\tvar p = EmptyParams();\r\n\t\t\tmap_object(p, function(out, moduleName) {\r\n\t\t\t\tvar defs = jsfx.Module[moduleName].params;\r\n\t\t\t\tmap_object(defs, function(def, name) {\r\n\t\t\t\t\tif (def.C) {\r\n\t\t\t\t\t\tvar values = Object_keys(def.C);\r\n\t\t\t\t\t\tout[name] = values[(values.length * Math.random()) | 0];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tout[name] = Math.random() * (def.H - def.L) + def.L;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tp.Volume.Master = 0.4;\r\n\t\t\tp.Filter = {}; // disable filter, as it usually will clip everything\r\n\t\t\tRemoveEmptyParams(p);\r\n\t\t\treturn p;\r\n\t\t}\r\n\t};\r\n\r\n\t// GENERATORS\r\n\r\n\t// uniform noise\r\n\tjsfx.G.unoise = newGenerator(\"sample = Math.random();\");\r\n\t// sine wave\r\n\tjsfx.G.sine = newGenerator(\"sample = Math.sin(phase);\");\r\n\t// saw wave\r\n\tjsfx.G.saw = newGenerator(\"sample = 2*(phase/TAU - ((phase/TAU + 0.5)|0));\");\r\n\t// triangle wave\r\n\tjsfx.G.triangle = newGenerator(\"sample = Math.abs(4 * ((phase/TAU - 0.25)%1) - 2) - 1;\");\r\n\t// square wave\r\n\tjsfx.G.square = newGenerator(\"var s = Math.sin(phase); sample = s > A ? 1.0 : s < A ? -1.0 : A;\");\r\n\t// simple synth\r\n\tjsfx.G.synth = newGenerator(\"sample = Math.sin(phase) + .5*Math.sin(phase/2) + .3*Math.sin(phase/4);\");\r\n\r\n\t// STATEFUL\r\n\tvar __noiseLast = 0;\r\n\tjsfx.G.noise = newGenerator(\"if(phase % TAU < 4){__noiseLast = Math.random() * 2 - 1;} sample = __noiseLast;\");\r\n\r\n\t// Karplus-Strong string\r\n\tjsfx.G.string = {\r\n\t\tcreate: function() {\r\n\t\t\tvar BS = 1 << 16;\r\n\t\t\tvar BM = BS - 1;\r\n\r\n\t\t\tvar buffer = createFloatArray(BS);\r\n\t\t\tfor (var i = 0; i < buffer.length; i++) {\r\n\t\t\t\tbuffer[i] = Math.random() * 2 - 1;\r\n\t\t\t}\r\n\r\n\t\t\tvar head = 0;\r\n\t\t\treturn function($, block) {\r\n\t\t\t\tvar TAU = Math.PI * 2;\r\n\t\t\t\tvar A = +$.generatorA,\r\n\t\t\t\t\tASlide = +$.generatorASlide,\r\n\t\t\t\t\tB = +$.generatorB,\r\n\t\t\t\t\tBSlide = +$.generatorBSlide;\r\n\t\t\t\tvar buf = buffer;\r\n\r\n\t\t\t\tfor (var i = 0; i < block.length; i++) {\r\n\t\t\t\t\tvar phaseSpeed = block[i];\r\n\t\t\t\t\tvar n = (TAU / phaseSpeed) | 0;\r\n\t\t\t\t\tA += ASlide;\r\n\t\t\t\t\tB += BSlide;\r\n\t\t\t\t\tA = A < 0 ? 0 : A > 1 ? 1 : A;\r\n\t\t\t\t\tB = B < 0 ? 0 : B > 1 ? 1 : B;\r\n\r\n\t\t\t\t\tvar t = ((head - n) + BS) & BM;\r\n\t\t\t\t\tvar sample = (\r\n\t\t\t\t\t\tbuf[(t - 0 + BS) & BM] * 1 +\r\n\t\t\t\t\t\tbuf[(t - 1 + BS) & BM] * A +\r\n\t\t\t\t\t\tbuf[(t - 2 + BS) & BM] * B) / (1 + A + B);\r\n\r\n\t\t\t\t\tbuf[head] = sample;\r\n\t\t\t\t\tblock[i] = buf[head];\r\n\t\t\t\t\thead = (head + 1) & BM;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.generatorA = A;\r\n\t\t\t\t$.generatorB = B;\r\n\t\t\t\treturn block.length;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Generates samples using given frequency and generator\r\n\tfunction newGenerator(line) {\r\n\t\treturn new Function(\"$\", \"block\", \"\" +\r\n\t\t\t\"var TAU = Math.PI * 2;\\n\" +\r\n\t\t\t\"var sample;\\n\" +\r\n\t\t\t\"var phase = +$.generatorPhase,\\n\" +\r\n\t\t\t\"\tA = +$.generatorA, ASlide = +$.generatorASlide,\\n\" +\r\n\t\t\t\"\tB = +$.generatorB, BSlide = +$.generatorBSlide;\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"for(var i = 0; i < block.length; i++){\\n\" +\r\n\t\t\t\"\tvar phaseSpeed = block[i];\\n\" +\r\n\t\t\t\"\tphase += phaseSpeed;\\n\" +\r\n\t\t\t\"\tif(phase > TAU){ phase -= TAU };\\n\" +\r\n\t\t\t\"\tA += ASlide; B += BSlide;\\n\" +\r\n\t\t\t\"   A = A < 0 ? 0 : A > 1 ? 1 : A;\\n\" +\r\n\t\t\t\"   B = B < 0 ? 0 : B > 1 ? 1 : B;\\n\" +\r\n\t\t\tline +\r\n\t\t\t\"\tblock[i] = sample;\\n\" +\r\n\t\t\t\"}\\n\" +\r\n\t\t\t\"\\n\" +\r\n\t\t\t\"$.generatorPhase = phase;\\n\" +\r\n\t\t\t\"$.generatorA = A;\\n\" +\r\n\t\t\t\"$.generatorB = B;\\n\" +\r\n\t\t\t\"return block.length;\\n\" +\r\n\t\t\t\"\");\r\n\t}\r\n\r\n\t// WAVE SUPPORT\r\n\r\n\t// Creates an Wave byte array from audio data [-1.0 .. 1.0]\r\n\tjsfx.CreateWave = CreateWave;\r\n\r\n\tfunction CreateWave(data) {\r\n\t\tif (typeof Float32Array !== \"undefined\") {\r\n\t\t\tassert(data instanceof Float32Array, 'data must be an Float32Array');\r\n\t\t}\r\n\r\n\t\tvar blockAlign = numChannels * bitsPerSample >> 3;\r\n\t\tvar byteRate = jsfx.SampleRate * blockAlign;\r\n\r\n\t\tvar output = createByteArray(8 + 36 + data.length * 2);\r\n\t\tvar p = 0;\r\n\r\n\t\t// emits string to output\r\n\t\tfunction S(value) {\r\n\t\t\tfor (var i = 0; i < value.length; i += 1) {\r\n\t\t\t\toutput[p] = value.charCodeAt(i);\r\n\t\t\t\tp++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// emits integer value to output\r\n\t\tfunction V(value, nBytes) {\r\n\t\t\tif (nBytes <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\toutput[p] = value & 0xFF;\r\n\t\t\tp++;\r\n\t\t\tV(value >> 8, nBytes - 1);\r\n\t\t}\r\n\t\t/* beautify preserve:start */\r\n\t\tS('RIFF'); V(36 + data.length * 2, 4);\r\n\r\n\t\tS('WAVEfmt '); V(16, 4); V(1, 2);\r\n\t\tV(numChannels, 2); V(jsfx.SampleRate, 4);\r\n\t\tV(byteRate, 4); V(blockAlign, 2); V(bitsPerSample, 2);\r\n\r\n\t\tS('data'); V(data.length * 2, 4);\r\n\t\tCopyFToU8(output.subarray(p), data);\r\n\t\t/* beautify preserve:end */\r\n\r\n\t\treturn output;\r\n\t};\r\n\r\n\t// Creates an Audio element from audio data [-1.0 .. 1.0]\r\n\tjsfx.CreateAudio = CreateAudio;\r\n\r\n\tfunction CreateAudio(data) {\r\n\t\tvar wave = CreateWave(data);\r\n\t\treturn new Audio('data:audio/wav;base64,' + U8ToB64(wave));\r\n\t};\r\n\r\n\tjsfx.DownloadAsFile = function(audio) {\r\n\t\tassert(audio instanceof Audio, 'input must be an Audio object');\r\n\t\tdocument.location.href = audio.src;\r\n\t};\r\n\r\n\t// HELPERS\r\n\tjsfx.Util = {};\r\n\r\n\t// Copies array of Floats to a Uint8Array with 16bits per sample\r\n\tjsfx.Util.CopyFToU8 = CopyFToU8;\r\n\r\n\tfunction CopyFToU8(into, floats) {\r\n\t\tassert(into.length / 2 == floats.length,\r\n\t\t\t'the target buffer must be twice as large as the iinput');\r\n\r\n\t\tvar k = 0;\r\n\t\tfor (var i = 0; i < floats.length; i++) {\r\n\t\t\tvar v = +floats[i];\r\n\t\t\tvar a = (v * 0x7FFF) | 0;\r\n\t\t\ta = a < -0x8000 ? -0x8000 : 0x7FFF < a ? 0x7FFF : a;\r\n\t\t\ta += a < 0 ? 0x10000 : 0;\r\n\t\t\tinto[k] = a & 0xFF;\r\n\t\t\tk++;\r\n\t\t\tinto[k] = a >> 8;\r\n\t\t\tk++;\r\n\t\t}\r\n\t}\r\n\r\n\t// Encodes Uint8Array with base64\r\n\tjsfx.Util.U8ToB64 = U8ToB64;\r\n\r\n\tfunction U8ToB64(data) {\r\n\t\tvar CHUNK = 0x8000;\r\n\t\tvar result = '';\r\n\t\tfor (var start = 0; start < data.length; start += CHUNK) {\r\n\t\t\tvar end = Math.min(start + CHUNK, data.length);\r\n\t\t\tresult += String.fromCharCode.apply(null, data.subarray(start, end));\r\n\t\t}\r\n\t\treturn btoa(result);\r\n\t}\r\n\r\n\t// uses AudioContext sampleRate or 44100;\r\n\tfunction getDefaultSampleRate() {\r\n\t\tif (typeof AudioContext !== 'undefined') {\r\n\t\t\treturn (new AudioContext()).sampleRate;\r\n\t\t}\r\n\t\treturn 44100;\r\n\t}\r\n\r\n\t// for checking pre/post conditions\r\n\tfunction assert(condition, message) {\r\n\t\tif (!condition) {\r\n\t\t\tthrow new Error(message);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clamp(v, min, max) {\r\n\t\tv = +v;\r\n\t\tmin = +min;\r\n\t\tmax = +max;\r\n\t\tif (v < min) {\r\n\t\t\treturn +min;\r\n\t\t}\r\n\t\tif (v > max) {\r\n\t\t\treturn +max;\r\n\t\t}\r\n\t\treturn +v;\r\n\t}\r\n\r\n\tfunction clamp1(v) {\r\n\t\tv = +v;\r\n\t\tif (v < +0.0) {\r\n\t\t\treturn +0.0;\r\n\t\t}\r\n\t\tif (v > +1.0) {\r\n\t\t\treturn +1.0;\r\n\t\t}\r\n\t\treturn +v;\r\n\t}\r\n\r\n\tfunction map_object(obj, fn) {\r\n\t\tvar r = {};\r\n\t\tfor (var name in obj) {\r\n\t\t\tif (obj.hasOwnProperty(name)) {\r\n\t\t\t\tr[name] = fn(obj[name], name);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n\r\n\t// uniform random\r\n\tfunction runif(scale, offset) {\r\n\t\tvar a = Math.random();\r\n\t\tif (scale !== undefined)\r\n\t\t\ta *= scale;\r\n\t\tif (offset !== undefined)\r\n\t\t\ta += offset;\r\n\t\treturn a;\r\n\t}\r\n\r\n\tfunction rchoose(gens) {\r\n\t\treturn gens[(gens.length * Math.random()) | 0];\r\n\t}\r\n\r\n\tfunction Object_keys(obj) {\r\n\t\tvar r = [];\r\n\t\tfor (var name in obj) {\r\n\t\t\tr.push(name);\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n\r\n\tjsfx._createFloatArray = createFloatArray;\r\n\r\n\tfunction createFloatArray(N) {\r\n\t\tif (typeof Float32Array === \"undefined\") {\r\n\t\t\tvar r = new Array(N);\r\n\t\t\tfor (var i = 0; i < r.length; i++) {\r\n\t\t\t\tr[i] = 0.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Float32Array(N);\r\n\t}\r\n\r\n\tfunction createByteArray(N) {\r\n\t\tif (typeof Uint8Array === \"undefined\") {\r\n\t\t\tvar r = new Array(N);\r\n\t\t\tfor (var i = 0; i < r.length; i++) {\r\n\t\t\t\tr[i] = 0 | 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Uint8Array(N);\r\n\t}\r\n\r\n\treturn jsfx;\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}