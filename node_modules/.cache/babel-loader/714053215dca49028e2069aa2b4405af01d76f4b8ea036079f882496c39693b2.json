{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Course\\\\Sound Project\\\\src\\\\components\\\\insideModifier.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../src/scripts/jsfx';\nimport jsfx from '../../src/scripts/jsfx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InsideModifier({\n  title\n}) {\n  _s();\n  const FuncList = ['unoise', 'sine', 'saw', 'traingle', 'square', 'synth', 'noise', 'string'];\n  const paramslist = jsfx.Module[title][\"params\"];\n  let chunks = [];\n  for (let i = 0; i < FuncList.length; i += 2) {\n    chunks.push(FuncList.slice(i, i + 2));\n  }\n  let FuncItem = chunks.map((chunk, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      fontSize: 12\n    },\n    children: chunk.map((item, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"chuncks\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        style: {\n          alignItems: 'left'\n        },\n        name: \"fngroup\",\n        value: item,\n        onChange: ev => {\n          window.ModifyValue([title], [item], value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, colIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n  const [value, setValue] = useState(0);\n\n  // useState(()=>{\n  //   const initialValues = {};\n  //   Object.keys(paramslist).forEach(item => {\n  //     initialValues[title]={\n  //       D: item.D\n  //     }\n\n  //   });\n  //   setValue(initialValues);\n\n  // })\n\n  function handleChange(item, e) {\n    setValue({\n      ...jsfx.Module[title][\"params\"],\n      [item]: {\n        ...jsfx.Module[title][\"params\"][item],\n        D: parseFloat(e.target.value)\n      }\n    });\n  }\n  let listitem = Object.keys(paramslist).map((item, index) => {\n    if (item === \"Func\") {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"radio-group\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              children: FuncItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (item) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: title + \"$\" + item,\n              min: paramslist[item].L,\n              max: paramslist[item].H,\n              step: paramslist[item].H - paramslist[item].L > 10 ? 1 : 0.01,\n              style: {\n                width: 170\n              },\n              name: item,\n              value: value,\n              onChange: ev => {\n                window.ModifyValue({\n                  title: title\n                }, {\n                  item: item\n                }, setValue(parseFloat(ev.target.value)));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insideModifier\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: 6,\n        paddingRight: 6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"tablewidth\",\n        children: listitem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(InsideModifier, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c = InsideModifier;\nvar _c;\n$RefreshReg$(_c, \"InsideModifier\");","map":{"version":3,"names":["React","useEffect","useState","jsfx","jsxDEV","_jsxDEV","InsideModifier","title","_s","FuncList","paramslist","Module","chunks","i","length","push","slice","FuncItem","map","chunk","rowIndex","style","fontSize","children","item","colIndex","className","type","alignItems","name","value","onChange","ev","window","ModifyValue","fileName","_jsxFileName","lineNumber","columnNumber","setValue","handleChange","e","D","parseFloat","target","listitem","Object","keys","index","textAlign","class","id","min","L","max","H","step","width","paddingLeft","paddingRight","_c","$RefreshReg$"],"sources":["D:/React Course/Sound Project/src/components/insideModifier.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport '../../src/scripts/jsfx'\r\nimport jsfx from '../../src/scripts/jsfx'\r\n\r\n\r\nexport default function InsideModifier({title}) {\r\n\r\n  const FuncList=['unoise','sine','saw','traingle','square','synth','noise','string']\r\n\r\n  const paramslist = jsfx.Module[title][\"params\"]\r\n  let chunks = [];\r\n  for (let i = 0; i < FuncList.length; i += 2) {\r\n    chunks.push(FuncList.slice(i, i + 2));\r\n  }\r\n\r\n  let FuncItem = chunks.map((chunk, rowIndex) => (\r\n    <tr key={rowIndex} style={{fontSize:12}}>\r\n      {chunk.map((item, colIndex) => (\r\n        <td className='chuncks' key={colIndex}>\r\n            <input \r\n            type='radio' style={{alignItems:'left'}} \r\n            name='fngroup' \r\n            value={item}\r\n            onChange={(ev)=>{\r\n              window.ModifyValue([title],[item],value)\r\n            }}/>\r\n            <label>{item}\r\n            </label>\r\n            </td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n\r\n  const [value, setValue] = useState(0)\r\n\r\n  // useState(()=>{\r\n  //   const initialValues = {};\r\n  //   Object.keys(paramslist).forEach(item => {\r\n  //     initialValues[title]={\r\n  //       D: item.D\r\n  //     }\r\n      \r\n  //   });\r\n  //   setValue(initialValues);\r\n\r\n  // })\r\n\r\n  function handleChange(item,e){\r\n    setValue({\r\n      ...jsfx.Module[title][\"params\"],\r\n      [item]:{\r\n        ...jsfx.Module[title][\"params\"][item],\r\n        D: parseFloat(e.target.value)\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  let listitem = Object.keys(paramslist).map((item,index)=>{\r\n    if(item===\"Func\"){\r\n      return(\r\n        <tr>\r\n        <td key={index}>{item}</td>\r\n        <td style={{textAlign:'right'}}>\r\n          <div class=\"radio-group\">\r\n          <form className='form'>\r\n            {FuncItem}\r\n          </form>\r\n          </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    else{\r\n      if(item){\r\n        return(\r\n          <tr>\r\n            <td key={index}>{item}</td>\r\n            <td style={{textAlign:'right'}}>\r\n              <input \r\n                type='range'\r\n                id = {title+\"$\"+item}  \r\n                min={paramslist[item].L} \r\n                max={paramslist[item].H} \r\n                step={(paramslist[item].H - paramslist[item].L) > 10 ? 1 : 0.01} \r\n                style={{width:170}} \r\n                name={item}\r\n                value={value}\r\n                onChange={(ev)=>{\r\n                  window.ModifyValue({title: title}, {item: item}, setValue(parseFloat(ev.target.value)));\r\n                }}\r\n                >\r\n              </input>\r\n              </td>\r\n          </tr>\r\n          );\r\n      }\r\n    }\r\n})\r\n\r\n  return (\r\n    <div className='insideModifier'>\r\n      <div style={{paddingLeft:6,paddingRight:6}}><b>{title}</b></div>\r\n      <div>\r\n        <table id='tablewidth'>\r\n          {listitem}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}